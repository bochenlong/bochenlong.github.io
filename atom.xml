<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>薄小破</title>
  <subtitle>厚德载物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bochenlong.github.io/"/>
  <updated>2016-08-18T08:41:57.507Z</updated>
  <id>http://bochenlong.github.io/</id>
  
  <author>
    <name>bochenlong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java8-Stream整理</title>
    <link href="http://bochenlong.github.io/2016/08/18/Java8-Stream%E6%95%B4%E7%90%86/"/>
    <id>http://bochenlong.github.io/2016/08/18/Java8-Stream整理/</id>
    <published>2016-08-18T08:04:21.000Z</published>
    <updated>2016-08-18T08:41:57.507Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Java8-Stream&quot;&gt;&lt;a href=&quot;#Java8-Stream&quot; class=&quot;headerlink&quot; title=&quot;Java8-Stream&quot;&gt;&lt;/a&gt;Java8-Stream&lt;/h3&gt;&lt;p&gt;流是Java8 API的新成员，它允许你以声明方式处理数据集合，你可以把它看成遍历数据集的高级迭代器；此外，流还可以透明地的并行处理，让你的代码性能更好。&lt;/p&gt;
&lt;h3 id=&quot;构建流&quot;&gt;&lt;a href=&quot;#构建流&quot; class=&quot;headerlink&quot; title=&quot;构建流&quot;&gt;&lt;/a&gt;构建流&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;由值创建流&lt;br&gt;使用静态方法Stream.of，通过显式创建一个流。它可以接受任意数量的参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;String&amp;gt; stream = Stream.of(&amp;quot;java8&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;passWord&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由数组创建流&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int[] numbers = new int[]&amp;#123;1,2,6,4,8,3,10&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由文件生成流&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;try (Stream&amp;lt;String&amp;gt; lines = Files.lines(Paths.get(&amp;quot;Test.java&amp;quot;), Charset.defaultCharset())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由函数生成流：创建无线流&lt;br&gt;Stream API提供了两个静态方法来从函数生成流：Stream.iterate和Stream.generate。这两个操作可以创建所谓的无限流。一般来说应该使用limit(n)对这种流加以限制。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;迭代&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Integer&amp;gt; stream = Stream.iterate(0,n-&amp;gt;n+2).limit(10);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Double&amp;gt; stream = Stream.generate(Math::random).limit(10);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相比较而言，interate是依次生成一系列值，生成的时候依赖于前值；比如例子中的生成偶数，每次计算对上一个值应用相加函数；而generate不是依次对每个新生成的值应用函数，它接受一个函数Supplier&lt;t&gt;产生新的值（Supplier&lt;t&gt;产生一个对象）。&lt;/t&gt;&lt;/t&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;数值流特有的生成一定范围数值的流&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;IntStream stream = IntStream.range(1,100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IntStream stream = IntStream.rangeClose(1,100);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这两个方法都接收起始值，但range不接收尾值，而rangeClose接收尾值。&lt;/p&gt;
&lt;h3 id=&quot;流操作&quot;&gt;&lt;a href=&quot;#流操作&quot; class=&quot;headerlink&quot; title=&quot;流操作&quot;&gt;&lt;/a&gt;流操作&lt;/h3&gt;&lt;p&gt;有了数据流，我们可以对流进行各种操作；操作前，你需要了解些Lambda和方法引用的内容。&lt;/p&gt;
&lt;h4 id=&quot;Lambda&quot;&gt;&lt;a href=&quot;#Lambda&quot; class=&quot;headerlink&quot; title=&quot;Lambda&quot;&gt;&lt;/a&gt;Lambda&lt;/h4&gt;&lt;p&gt;Lambda表达式有三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数列表&lt;/li&gt;
&lt;li&gt;箭头&lt;/li&gt;
&lt;li&gt;Lambda主体&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lambda表达式实际上表达了函数式接口（只定义一个抽象方法的接口，Java8中为了更好的辨别此类接口使用了@FunctionalInterface的注解）的一个实例，相比匿名类来说，更简单更高效。&lt;br&gt;比如我们启动一个线程&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;new Thread(() -&amp;gt; System.out.println(&amp;quot;Hello World&amp;quot;)).start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Thread接收一个Runnable的实例，这里简单的写成了&lt;code&gt;() -&amp;gt; System.out.println(&amp;quot;Hello World&amp;quot;)&lt;/code&gt;,这个Lambda表达式就表达了一个Runnable的实例，事实上&lt;code&gt;Runnable r = ()-&amp;gt;System.out.println(&amp;quot;Hello World&amp;quot;);&lt;/code&gt;,两者是相等的。&lt;/p&gt;
&lt;p&gt;注意：Lambda表达式的签名要和函数式接口的抽象方法签名一致&lt;/p&gt;
&lt;h4 id=&quot;方法引用&quot;&gt;&lt;a href=&quot;#方法引用&quot; class=&quot;headerlink&quot; title=&quot;方法引用&quot;&gt;&lt;/a&gt;方法引用&lt;/h4&gt;&lt;p&gt;方法引用可以让你重复使用现有的方法定义，并像Lambda一样传递它们；方法引用可以被看做仅仅调用特定方法的Lambda的一种快捷键写法。如果一个Lambda代表的只是“直接调用这个方法”，那最好还是用名称来调用它。&lt;br&gt;比如上面的示例改成&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;new Thread(() -&amp;gt; System.out::println).start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是输出为空；常见的对象比较、对象转化我们都可以用这种方式来简化书写；下面的示例会有具体体现。&lt;/p&gt;
&lt;h4 id=&quot;中间操作&quot;&gt;&lt;a href=&quot;#中间操作&quot; class=&quot;headerlink&quot; title=&quot;中间操作&quot;&gt;&lt;/a&gt;中间操作&lt;/h4&gt;&lt;p&gt;中间操作，是对流的操作处理，产生的也为一个流；重要的是如果流没有触发中断操作，中间操作不会执行任何处理。为了更好的演示，下面我们创建一个类，以便于具体场景下解释&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Dish &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        private final String name;// 名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        private final boolean vegetarian;// 是否素食&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        private final int calories;// 热量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        private final Type type;// 类型（肉、鱼、其他）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public Dish(String name, boolean vegetarian, int calories, Type type) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.vegetarian = vegetarian;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.calories = calories;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.type = type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public String getName() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public boolean isVegetarian() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return vegetarian;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public int getCalories() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return calories;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public Type getType() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public enum Type &amp;#123;MEAT, FISH, OTHER&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建一个菜单&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;Dish&amp;gt; menu = Arrays.asList(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;duck&amp;quot;, false, 800, Dish.Type.MEAT),// 鸭肉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;beef&amp;quot;, false, 700, Dish.Type.MEAT),// 牛肉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;chicken&amp;quot;, false, 400, Dish.Type.MEAT),// 鸡肉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;french fries&amp;quot;, true, 530, Dish.Type.OTHER),// 炸薯条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;rice&amp;quot;, true, 350, Dish.Type.OTHER),// 米&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;season fruit&amp;quot;, true, 120, Dish.Type.OTHER),// 季节水果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;pizza&amp;quot;, true, 550, Dish.Type.OTHER),// 比萨饼&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;prawns&amp;quot;, false, 300, Dish.Type.FISH),// 虾&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new Dish(&amp;quot;salmon&amp;quot;, false, 450, Dish.Type.FISH)// 鲑鱼&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;filter&quot;&gt;&lt;a href=&quot;#filter&quot; class=&quot;headerlink&quot; title=&quot;filter&quot;&gt;&lt;/a&gt;filter&lt;/h5&gt;&lt;p&gt;该操作接受一个谓词（一个返回boolean的函数）作为参数，并返回一个包含所有符合谓词的元素的流。&lt;br&gt;比如获取素食&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Dish&amp;gt; stream = menu.stream().filter(Dish::isVegetarian);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里&lt;code&gt;Dish::isVegetarian&lt;/code&gt;就是Lambda&lt;code&gt;a -&amp;gt; a.isVegetarian()&lt;/code&gt;的简写，&lt;code&gt;a&lt;/code&gt;由Java的类型推导会自动识别为&lt;code&gt;Dish&lt;/code&gt;类型。&lt;/p&gt;
&lt;h5 id=&quot;distinct&quot;&gt;&lt;a href=&quot;#distinct&quot; class=&quot;headerlink&quot; title=&quot;distinct&quot;&gt;&lt;/a&gt;distinct&lt;/h5&gt;&lt;p&gt;该操作会返回一个元素各异（根据流所生成元素的hashCode/equals方法实现）的流。&lt;br&gt;比如下面获取不重复的数值流&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;IntStream intStream =IntStream.of(1,2,1,2,4,5,6).distinct();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;skip&quot;&gt;&lt;a href=&quot;#skip&quot; class=&quot;headerlink&quot; title=&quot;skip&quot;&gt;&lt;/a&gt;skip&lt;/h5&gt;&lt;p&gt;该操作返回一个扔掉了前n个元素的流&lt;br&gt;比如菜单中出去前两个的菜品&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Dish&amp;gt; stream = menu.stream().skip(2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;limit&quot;&gt;&lt;a href=&quot;#limit&quot; class=&quot;headerlink&quot; title=&quot;limit&quot;&gt;&lt;/a&gt;limit&lt;/h5&gt;&lt;p&gt;该操作会返回一个不超过给定长度的流。&lt;br&gt;比如前5个菜品&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Dish&amp;gt; stream = menu.stream().limit(5);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;map&quot;&gt;&lt;a href=&quot;#map&quot; class=&quot;headerlink&quot; title=&quot;map&quot;&gt;&lt;/a&gt;map&lt;/h5&gt;&lt;p&gt;映射操作，即流接受一个函数作为参数，这个函数会应用到每个元素上，并将其映射成一个新的元素。&lt;br&gt;比如获取全部的菜名流&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;String&amp;gt; stream = menu.stream().map(Dish::getName);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;flatMap&quot;&gt;&lt;a href=&quot;#flatMap&quot; class=&quot;headerlink&quot; title=&quot;flatMap&quot;&gt;&lt;/a&gt;flatMap&lt;/h5&gt;&lt;p&gt;此方法把一个流中的每个值都换成另一个流，然后把所有的流链接起来成为一个流。&lt;br&gt;比如获取字符串数组的全部字母流&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Arrays.stream(new String[]&amp;#123;&amp;quot;abc&amp;quot;,&amp;quot;defg&amp;quot;&amp;#125;).map(a-&amp;gt;a.split(&amp;quot;&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此操作将每个元素进行&lt;code&gt;sprit&lt;/code&gt;操作获取到Stream&lt;string[]&gt;，要想获取Stream&lt;string&gt;则需要进一步转换&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;String&amp;gt; stringStream = Arrays.stream(new String[]&amp;#123;&amp;quot;abc&amp;quot;,&amp;quot;defg&amp;quot;&amp;#125;).map(a-&amp;gt;a.split(&amp;quot;&amp;quot;)).flatMap(Arrays::stream);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/string&gt;&lt;/string[]&gt;&lt;/p&gt;
&lt;h5 id=&quot;sorted&quot;&gt;&lt;a href=&quot;#sorted&quot; class=&quot;headerlink&quot; title=&quot;sorted&quot;&gt;&lt;/a&gt;sorted&lt;/h5&gt;&lt;p&gt;此方法可以将流按照一定的规则进行元素排列，参数为空时按照对象的默认比较器进行排序，同时你也可以传入自定义的比较器来定制排序规则。&lt;br&gt;比如按照热量对菜品进行排序&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Dish&amp;gt; stream = menu.stream().sorted((a,b)-&amp;gt; a.getCalories()&amp;gt;b.getCalories()?1:0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以简写为&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Dish&amp;gt; stream = menu.stream().sorted(Comparator.comparing(Dish::getCalories));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;终端操作&quot;&gt;&lt;a href=&quot;#终端操作&quot; class=&quot;headerlink&quot; title=&quot;终端操作&quot;&gt;&lt;/a&gt;终端操作&lt;/h4&gt;&lt;p&gt;终端操作消费一个流，获取一个具体的对象结果。&lt;/p&gt;
&lt;h5 id=&quot;anyMatch-noneMatch-allMatch&quot;&gt;&lt;a href=&quot;#anyMatch-noneMatch-allMatch&quot; class=&quot;headerlink&quot; title=&quot;anyMatch/noneMatch/allMatch&quot;&gt;&lt;/a&gt;anyMatch/noneMatch/allMatch&lt;/h5&gt;&lt;p&gt;此三个方法为判断流中元素是否匹配给定的谓词，返回一个boolean值：anyMathch任意匹配；noneMathch全不匹配;allMathch都匹配。&lt;br&gt;如下是否有素食&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;boolean flag = menu.stream().anyMatch(Dish::isVegetarian);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;findAny-findFirst&quot;&gt;&lt;a href=&quot;#findAny-findFirst&quot; class=&quot;headerlink&quot; title=&quot;findAny/findFirst&quot;&gt;&lt;/a&gt;findAny/findFirst&lt;/h5&gt;&lt;p&gt;返回当前流的任意/第一个元素，返回一个&lt;code&gt;Optional&amp;lt;T&amp;gt;&lt;/code&gt;对象&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Optional optional = menu.stream().findFirst();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Otpional&amp;lt;T&amp;gt;&lt;/code&gt;类是一个容器类，代表一个值存在或者不存在；Java8引入&lt;code&gt;Optional&amp;lt;T&amp;gt;&lt;/code&gt;，这样就不会出现NUll的问题了，比如上面如果菜单为空，如何获取第一个元素。&lt;br&gt;&lt;code&gt;Optional&amp;lt;T&amp;gt;&lt;/code&gt;提供了以下方法让你处理值不存在的情形：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;isPresent()&lt;/code&gt;将在&lt;code&gt;Optaional&lt;/code&gt;包含值的时候返回为true否则false&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isPresent(Consumer&amp;lt;T&amp;gt; block)&lt;/code&gt;会在值存在的时候指定给定代码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T get()&lt;/code&gt;会在值存在时返回值，否则抛出NoSuchElement异常&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T orElseGet(Object other)&lt;/code&gt;会在值不存在时返回一个默认值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T orElseGet(Supplier other)&lt;/code&gt;会在值不存在时生成一个默认值&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;foreach&quot;&gt;&lt;a href=&quot;#foreach&quot; class=&quot;headerlink&quot; title=&quot;foreach&quot;&gt;&lt;/a&gt;foreach&lt;/h5&gt;&lt;p&gt;此方法对流中的每个元素应用一个&lt;code&gt;Comsumer&amp;lt;T&amp;gt;&lt;/code&gt;的函数，返回一个void类型；常常我们用来输出。&lt;br&gt;如下打印全部的菜单名称&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu.stream().forEach(a -&amp;gt; System.out.println(a.getName()));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;collect&quot;&gt;&lt;a href=&quot;#collect&quot; class=&quot;headerlink&quot; title=&quot;collect&quot;&gt;&lt;/a&gt;collect&lt;/h5&gt;&lt;p&gt;将流 转换成其他形式，你可以把collect看做能够接受各种方案作为参数，并将流中的元素累积成一个汇总结果的操作。&lt;br&gt;比如将全部菜品收集到List中&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu.stream().map(Dish::getName).collect(Collectors.toList());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;collect实际上也是一种归约操作，接收Collecttors参数可以实现更高级的汇总，比如实现菜单按照素食非素质归类，按照热量范畴归类等等。见 &lt;a href=&quot;&quot;&gt;Java8-Collectors&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;reduce&quot;&gt;&lt;a href=&quot;#reduce&quot; class=&quot;headerlink&quot; title=&quot;reduce&quot;&gt;&lt;/a&gt;reduce&lt;/h5&gt;&lt;p&gt;reduce即归约操作，用来表达更复杂的查询，比如“计算菜单中的总热量”&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu.stream().map(Dish::getCalories).reduce(0,Integer::sum);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;reduce接收两个参数：&lt;br&gt;1 一个初始值&lt;br&gt;2 一个&lt;code&gt;BinaryOperator&amp;lt;T&amp;gt;&lt;/code&gt;来将两个元素结合起来产生一个新值，这里我们使用的是lambda (a,b) -&amp;gt; a+b，用方法引用简写了；&lt;br&gt;reduce还有一个变体，不接收初始值，返回一个&lt;code&gt;Optional&lt;/code&gt;对象，如&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu.stream().map(Dish::getCalories).reduce(Integer::sum);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是这种写法有性能问题，它有一个暗含的装箱成本，每个Integer必须拆分成一个原始类型再进行求和。Stream API提供了原始类型流特化来专门支持处理数值流的方法。见下。&lt;/p&gt;
&lt;h5 id=&quot;原始类型特化&quot;&gt;&lt;a href=&quot;#原始类型特化&quot; class=&quot;headerlink&quot; title=&quot;原始类型特化&quot;&gt;&lt;/a&gt;原始类型特化&lt;/h5&gt;&lt;p&gt;Java8提供了3个原始类型流接口：IntStream/DoubleStream/LongStream，分别将流中的元素特化为int/long/double，从而避免暗含的装箱成本。每个接口都提供了常用的规约方法，比如max/sum/min等。&lt;br&gt;比如上面实例可以写成&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu.stream().mapToInt(Dish::getCalories).sum();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意：sum的默认值为0，如果为max()操作的话，将返回&lt;code&gt;OptionalInt&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果要将数值流转换回对象流，则需要&lt;code&gt;box()&lt;/code&gt;操作，比如&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Integer&amp;gt; stream = menu.stream().mapToInt(Dish::getCalories).boxed();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;count&quot;&gt;&lt;a href=&quot;#count&quot; class=&quot;headerlink&quot; title=&quot;count&quot;&gt;&lt;/a&gt;count&lt;/h5&gt;&lt;p&gt;count即计数，计算流中元素的数量；实际上通过转化LongStream进行reduce操作获取的。&lt;br&gt;比如计算菜品总数&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu.stream().count();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Java8-Stream&quot;&gt;&lt;a href=&quot;#Java8-Stream&quot; class=&quot;headerlink&quot; title=&quot;Java8-Stream&quot;&gt;&lt;/a&gt;Java8-Stream&lt;/h3&gt;&lt;p&gt;流是Java8 API的新成员，它允许你以声明方式处理数据集合，你可以把它看成遍历数据集的高级迭代器；此外，流还可以透明地的并行处理，让你的代码性能更好。&lt;/p&gt;
&lt;h3 id=&quot;构建流&quot;&gt;&lt;a href=&quot;#构建流&quot; class=&quot;headerlink&quot; title=&quot;构建流&quot;&gt;&lt;/a&gt;构建流&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;由值创建流&lt;br&gt;使用静态方法Stream.of，通过显式创建一个流。它可以接受任意数量的参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;String&amp;gt; stream = Stream.of(&amp;quot;java8&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;passWord&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由数组创建流&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int[] numbers = new int[]&amp;#123;1,2,6,4,8,3,10&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由文件生成流&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;try (Stream&amp;lt;String&amp;gt; lines = Files.lines(Paths.get(&amp;quot;Test.java&amp;quot;), Charset.defaultCharset())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由函数生成流：创建无线流&lt;br&gt;Stream API提供了两个静态方法来从函数生成流：Stream.iterate和Stream.generate。这两个操作可以创建所谓的无限流。一般来说应该使用limit(n)对这种流加以限制。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;迭代&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Integer&amp;gt; stream = Stream.iterate(0,n-&amp;gt;n+2).limit(10);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream&amp;lt;Double&amp;gt; stream = Stream.generate(Math::random).limit(10);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相比较而言，interate是依次生成一系列值，生成的时候依赖于前值；比如例子中的生成偶数，每次计算对上一个值应用相加函数；而generate不是依次对每个新生成的值应用函数，它接受一个函数Supplier&lt;T&gt;产生新的值（Supplier&lt;T&gt;产生一个对象）。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://bochenlong.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://bochenlong.github.io/tags/Java/"/>
    
      <category term="Stream" scheme="http://bochenlong.github.io/tags/Stream/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB学习笔记03【进阶】</title>
    <link href="http://bochenlong.github.io/2016/06/17/MongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003%E3%80%90%E8%BF%9B%E9%98%B6%E3%80%91/"/>
    <id>http://bochenlong.github.io/2016/06/17/MongoDB学习笔记03【进阶】/</id>
    <published>2016-06-17T01:42:53.000Z</published>
    <updated>2016-06-23T03:27:38.032Z</updated>
    
    <content type="html">&lt;h3 id=&quot;MongoDB索引&quot;&gt;&lt;a href=&quot;#MongoDB索引&quot; class=&quot;headerlink&quot; title=&quot;MongoDB索引&quot;&gt;&lt;/a&gt;MongoDB索引&lt;/h3&gt;&lt;p&gt;索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。&lt;/p&gt;
&lt;h4 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;db.COLLECTION_NAME.ensureIndex({KEY:1,...})&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;语法中KEY值为你要创建的索引字段，1为指定按升序创建索引，-1为按降序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ensureIndex()接收可选参数，参见列表：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;background&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 “background” 可选参数。 “background” 默认值为false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unique&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;建立的索引是否唯一。指定为true创建唯一索引。默认值为false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dropDups&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;在建立唯一索引时是否删除重复记录,指定 true 创建唯一索引。默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sparse&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;对文档中不存在的字段数据不启用索引；这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档.。默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;expireAfterSeconds&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;指定一个以秒为单位的数值，完成 TTL设定，设定集合的生存时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v&lt;/td&gt;
&lt;td&gt;index version&lt;/td&gt;
&lt;td&gt;索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;weights&lt;/td&gt;
&lt;td&gt;document&lt;/td&gt;
&lt;td&gt;索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default_language&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;对于文本索引，该参数决定了停用词及词干和词器的规则的列表。 默认为英语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;language_override&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为 language.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h4&gt;&lt;p&gt;&lt;code&gt;db.user.ensureIndex({name:1},{background:true})&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;MongoDB聚合&quot;&gt;&lt;a href=&quot;#MongoDB聚合&quot; class=&quot;headerlink&quot; title=&quot;MongoDB聚合&quot;&gt;&lt;/a&gt;MongoDB聚合&lt;/h3&gt;&lt;p&gt;MongoDB中聚合(aggregate)主要用于处理数据(诸如统计平均值,求和等)，并返回计算后的数据结果。&lt;/p&gt;
&lt;h4 id=&quot;语法-1&quot;&gt;&lt;a href=&quot;#语法-1&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;db.COLLECTION_NAME.aggregate(AGGREGATE_OPERATION)&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;管道操作符&quot;&gt;&lt;a href=&quot;#管道操作符&quot; class=&quot;headerlink&quot; title=&quot;管道操作符&quot;&gt;&lt;/a&gt;管道操作符&lt;/h4&gt;&lt;p&gt;管道是由一个个功能节点组成的，这些节点用管道操作符来进行表示。聚合管道以一个集合中的所有文档作为开始，然后这些文档从一个操作节点流向下一个节点 ，每个操作节点对文档做相应的操作。这些操作可能会创建新的文档或者过滤掉一些不符合条件的文档，在管道中可以对文档进行重复操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下为某班成绩表：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a91ef4de94710e10420e&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;team&amp;quot; : &amp;quot;1&amp;quot;, &amp;quot;yuwen&amp;quot; : 121, &amp;quot;shuxue&amp;quot; : 118, &amp;quot;yingyu&amp;quot; : 137, &amp;quot;lizong&amp;quot; : [ 90, 72, 66 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a936f4de94710e10420f&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;team&amp;quot; : &amp;quot;2&amp;quot;, &amp;quot;yuwen&amp;quot; : 110, &amp;quot;shuxue&amp;quot; : 128, &amp;quot;yingyu&amp;quot; : 137, &amp;quot;lizong&amp;quot; : [ 80, 92, 77 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a959f4de94710e104210&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;team&amp;quot; : &amp;quot;3&amp;quot;, &amp;quot;yuwen&amp;quot; : 100, &amp;quot;shuxue&amp;quot; : 108, &amp;quot;yingyu&amp;quot; : 127, &amp;quot;lizong&amp;quot; : [ 70, 62, 88 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a96df4de94710e104211&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;team&amp;quot; : &amp;quot;3&amp;quot;, &amp;quot;yuwen&amp;quot; : 110, &amp;quot;shuxue&amp;quot; : 112, &amp;quot;yingyu&amp;quot; : 107, &amp;quot;lizong&amp;quot; : [ 90, 92, 68 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a97df4de94710e104212&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;team&amp;quot; : &amp;quot;3&amp;quot;, &amp;quot;yuwen&amp;quot; : 110, &amp;quot;shuxue&amp;quot; : 112, &amp;quot;yingyu&amp;quot; : 107, &amp;quot;lizong&amp;quot; : [ 90, 92, 68 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a9d4f4de94710e104213&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;team&amp;quot; : &amp;quot;2&amp;quot;, &amp;quot;yuwen&amp;quot; : 98, &amp;quot;shuxue&amp;quot; : 62, &amp;quot;yingyu&amp;quot; : 55, &amp;quot;lizong&amp;quot; : [ 20, 32, 58 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;project&quot;&gt;&lt;a href=&quot;#project&quot; class=&quot;headerlink&quot; title=&quot;$project&quot;&gt;&lt;/a&gt;$project&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;数据投影，主要用于重命名、增加和删除字段（默认情况下_id是存在，如果不想显示手动置为0)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：输出名称和语文成绩,且语文key声明为yw&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{_id:0,name:1,yw:&amp;#39;$yuwen&amp;#39;}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;yw&amp;quot; : 121 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;yw&amp;quot; : 100 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;yw&amp;quot; : 98 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;match&quot;&gt;&lt;a href=&quot;#match&quot; class=&quot;headerlink&quot; title=&quot;$match&quot;&gt;&lt;/a&gt;$match&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;过滤操作，筛选符合条件文档，作为下一阶段的输入&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：输出名称和语文成绩，要求语文成绩大于100&lt;br&gt;&lt;code&gt;db.score.aggregate([{$match:{&amp;#39;yuwen&amp;#39;:{$gt:100}}},{$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;yw&amp;#39;:&amp;#39;$yuwen&amp;#39;}}])&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;yw&amp;quot; : 121 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;limit&quot;&gt;&lt;a href=&quot;#limit&quot; class=&quot;headerlink&quot; title=&quot;$limit &quot;&gt;&lt;/a&gt;$limit &lt;span id=&quot;limit&quot;&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;限制经过管道的文档数量&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：获取语文成绩前两名的名字和成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$sort:{&amp;#39;yuwen&amp;#39;:-1}},{$limit:2},{$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;yw&amp;#39;:&amp;#39;$yuwen&amp;#39;}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;yw&amp;quot; : 121 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;skip&quot;&gt;&lt;a href=&quot;#skip&quot; class=&quot;headerlink&quot; title=&quot;$skip&quot;&gt;&lt;/a&gt;$skip&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;从代操作集合开始的位置跳过文档的数目&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：获取语文成绩第三名第四名的名字和成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$sort:{&amp;#39;yuwen&amp;#39;:-1}},{$skip:2},{$limit:2},{$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;yw&amp;#39;:&amp;#39;$yuwen&amp;#39;}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;yw&amp;quot; : 110 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;unwind&quot;&gt;&lt;a href=&quot;#unwind&quot; class=&quot;headerlink&quot; title=&quot;$unwind&quot;&gt;&lt;/a&gt;$unwind&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;将数组元素拆分为独立字段&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：获取name:bochenlong的理综各科成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;lizong&amp;#39;:1}},{$match:{&amp;#39;name&amp;#39;:&amp;#39;bochenlong&amp;#39;}},{$unwind:&amp;#39;$lizong&amp;#39;})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;lizong&amp;quot; : 90 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;lizong&amp;quot; : 72 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;lizong&amp;quot; : 66 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;group&quot;&gt;&lt;a href=&quot;#group&quot; class=&quot;headerlink&quot; title=&quot;$group &quot;&gt;&lt;/a&gt;$group &lt;span id=&quot;group&quot;&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;对数据进行分组&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：计算总人数&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,num:{$sum:1}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : null, &amp;quot;num&amp;quot; : 6 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;sort&quot;&gt;&lt;a href=&quot;#sort&quot; class=&quot;headerlink&quot; title=&quot;$sort&quot;&gt;&lt;/a&gt;$sort&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;对文案按照指定字段排序&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#limit&quot;&gt;参见$limit&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;goNear&quot;&gt;&lt;a href=&quot;#goNear&quot; class=&quot;headerlink&quot; title=&quot;$goNear&quot;&gt;&lt;/a&gt;$goNear&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;返回一些坐标值，这些指以按照举例指定点距离近到远进行排序&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/aggregation/geoNear/#pipe._S_geoNear&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参见官网&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;聚合表达式&quot;&gt;&lt;a href=&quot;#聚合表达式&quot; class=&quot;headerlink&quot; title=&quot;聚合表达式&quot;&gt;&lt;/a&gt;聚合表达式&lt;/h4&gt;&lt;p&gt;管道操作符作为“键”,所对应的“值”叫做管道表达式。每个管道表达式只能作用于处理当前正在处理的文档，而不能进行跨文档的操作。管道表达式对文档的处理都是在内存中进行的。除了能够进行累加计算的管道表达式外，其他的表达式都是无状态的，也就是不会保留上下文的信息。&lt;br&gt;&lt;strong&gt;组聚合操作符：&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&quot;sum&quot;&gt;&lt;a href=&quot;#sum&quot; class=&quot;headerlink&quot; title=&quot;$sum&quot;&gt;&lt;/a&gt;$sum&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;计算总和&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#group&quot;&gt;参见$group&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;avg&quot;&gt;&lt;a href=&quot;#avg&quot; class=&quot;headerlink&quot; title=&quot;$avg&quot;&gt;&lt;/a&gt;$avg&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;计算平均值&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：计算语文平均成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,&amp;#39;yuwen&amp;#39;:{$avg:&amp;#39;$yuwen&amp;#39;}}},{$project:{_id:0,&amp;#39;yuwen&amp;#39;:1}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;yuwen&amp;quot; : 108.16666666666667 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;min&quot;&gt;&lt;a href=&quot;#min&quot; class=&quot;headerlink&quot; title=&quot;$min&quot;&gt;&lt;/a&gt;$min&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;获取集合中所有文档对应值得最小值&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：计算语文最低成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,&amp;#39;yuwen&amp;#39;:{$min:&amp;#39;$yuwen&amp;#39;}}},{$project:{_id:0,&amp;#39;yuwen&amp;#39;:1}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;yuwen&amp;quot; : 98 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;max&quot;&gt;&lt;a href=&quot;#max&quot; class=&quot;headerlink&quot; title=&quot;$max&quot;&gt;&lt;/a&gt;$max&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;获取集合中所有文档对应值得最大值&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：计算语文最高成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,&amp;#39;yuwen&amp;#39;:{$max:&amp;#39;$yuwen&amp;#39;}}},{$project:{_id:0,&amp;#39;yuwen&amp;#39;:1}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;yuwen&amp;quot; : 121 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;push&quot;&gt;&lt;a href=&quot;#push&quot; class=&quot;headerlink&quot; title=&quot;$push&quot;&gt;&lt;/a&gt;$push&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;在结果文档中插入值到一个数组中&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：获取所有的语文成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,&amp;#39;yuwen&amp;#39;:{$push:&amp;#39;$yuwen&amp;#39;}}},{$project:{_id:0,&amp;#39;yuwen&amp;#39;:1}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;yuwen&amp;quot; : [ 121, 110, 100, 110, 110, 98 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;addToSet&quot;&gt;&lt;a href=&quot;#addToSet&quot; class=&quot;headerlink&quot; title=&quot;$addToSet&quot;&gt;&lt;/a&gt;$addToSet&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;在结果文档中插入值到一个数组中，如果数组中已有，则不插入&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：获取所有的语文成绩&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,&amp;#39;yuwen&amp;#39;:{$addToSet:&amp;#39;$yuwen&amp;#39;}}},{$project:{_id:0,&amp;#39;yuwen&amp;#39;:1}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;yuwen&amp;quot; : [ 98, 100, 110, 121 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;first&quot;&gt;&lt;a href=&quot;#first&quot; class=&quot;headerlink&quot; title=&quot;$first&quot;&gt;&lt;/a&gt;$first&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;根据资源文档的排序获取第一个文档数据&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：获取文档第一个数据&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,&amp;#39;yuwen&amp;#39;:{$first:&amp;#39;$yuwen&amp;#39;}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : null, &amp;quot;yuwen&amp;quot; : 121 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;last&quot;&gt;&lt;a href=&quot;#last&quot; class=&quot;headerlink&quot; title=&quot;$last&quot;&gt;&lt;/a&gt;$last&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;根据资源文档的排序获取最后一个文档数据&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：获取文档最后数据&lt;br&gt;&lt;code&gt;db.score.aggregate({$group:{&amp;#39;_id&amp;#39;:null,&amp;#39;yuwen&amp;#39;:{$last:&amp;#39;$yuwen&amp;#39;}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : null, &amp;quot;yuwen&amp;quot; : 98 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Bool类型聚合操作符&quot;&gt;&lt;a href=&quot;#Bool类型聚合操作符&quot; class=&quot;headerlink&quot; title=&quot;Bool类型聚合操作符&quot;&gt;&lt;/a&gt;Bool类型聚合操作符&lt;/h4&gt;&lt;h5 id=&quot;and&quot;&gt;&lt;a href=&quot;#and&quot; class=&quot;headerlink&quot; title=&quot;$and&quot;&gt;&lt;/a&gt;$and&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;根据条件输出true 或者 false&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：查看学生是否数学和语文都过100分&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;result&amp;#39;:{$and:[{$gt:[&amp;#39;$yuwen&amp;#39;,100]},{$gt:[&amp;#39;$shuxue&amp;#39;,100]}]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;or&quot;&gt;&lt;a href=&quot;#or&quot; class=&quot;headerlink&quot; title=&quot;$or&quot;&gt;&lt;/a&gt;$or&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;根据条件输出true 或者 false&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：查看学生是否数学或语文过100分&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;result&amp;#39;:{$or:[{$gt:[&amp;#39;$yuwen&amp;#39;,100]},{$gt:[&amp;#39;$shuxue&amp;#39;,100]}]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;not&quot;&gt;&lt;a href=&quot;#not&quot; class=&quot;headerlink&quot; title=&quot;$not&quot;&gt;&lt;/a&gt;$not&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;根据条件输出true 或者 false&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：查看学生是否语文不超过100分&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;result&amp;#39;:{$not:[{$gt:[&amp;#39;$yuwen&amp;#39;,100]}]}}}&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;比较类型聚合操作符&quot;&gt;&lt;a href=&quot;#比较类型聚合操作符&quot; class=&quot;headerlink&quot; title=&quot;比较类型聚合操作符&quot;&gt;&lt;/a&gt;比较类型聚合操作符&lt;/h4&gt;&lt;h5 id=&quot;cmp&quot;&gt;&lt;a href=&quot;#cmp&quot; class=&quot;headerlink&quot; title=&quot;$cmp&quot;&gt;&lt;/a&gt;$cmp&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;比较两个值，返回数值类型&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：查看学生是否语文超过100分&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;result&amp;#39;:{$cmp:[&amp;#39;$yuwen&amp;#39;,100]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;result&amp;quot; : 1 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;result&amp;quot; : 1 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : 0 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : 1 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;result&amp;quot; : 1 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;result&amp;quot; : -1 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;eq&quot;&gt;&lt;a href=&quot;#eq&quot; class=&quot;headerlink&quot; title=&quot;$eq &quot;&gt;&lt;/a&gt;$eq &lt;span id=&quot;eq&quot;&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;比较两个值是否相等，返回true或false&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：查看学生是否语文是100分（好无聊的要求）&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;result&amp;#39;:{$eq:[&amp;#39;$yuwen&amp;#39;,100]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : true &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;result&amp;quot; : false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;gt&quot;&gt;&lt;a href=&quot;#gt&quot; class=&quot;headerlink&quot; title=&quot;$gt&quot;&gt;&lt;/a&gt;$gt&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;比较是否大于，返回true或false&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#eq&quot;&gt;参见$eq&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;gte&quot;&gt;&lt;a href=&quot;#gte&quot; class=&quot;headerlink&quot; title=&quot;$gte&quot;&gt;&lt;/a&gt;$gte&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;比较是否大于等于，返回true或false&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#eq&quot;&gt;参见$eq&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;lt&quot;&gt;&lt;a href=&quot;#lt&quot; class=&quot;headerlink&quot; title=&quot;$lt&quot;&gt;&lt;/a&gt;$lt&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;比较是否小于，返回true或false&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#eq&quot;&gt;参见$eq&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;lte&quot;&gt;&lt;a href=&quot;#lte&quot; class=&quot;headerlink&quot; title=&quot;$lte&quot;&gt;&lt;/a&gt;$lte&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;比较是否小于等于，返回true或false&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#eq&quot;&gt;参见$eq&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;ne&quot;&gt;&lt;a href=&quot;#ne&quot; class=&quot;headerlink&quot; title=&quot;$ne&quot;&gt;&lt;/a&gt;$ne&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;比较是否不等于，返回true或false&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#eq&quot;&gt;参见$eq&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;算数类型聚合操作符&quot;&gt;&lt;a href=&quot;#算数类型聚合操作符&quot; class=&quot;headerlink&quot; title=&quot;算数类型聚合操作符&quot;&gt;&lt;/a&gt;算数类型聚合操作符&lt;/h4&gt;&lt;h5 id=&quot;add&quot;&gt;&lt;a href=&quot;#add&quot; class=&quot;headerlink&quot; title=&quot;$add &quot;&gt;&lt;/a&gt;$add &lt;span id=&quot;add&quot;&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;计算数组的和&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：查看学生语数外成绩总和&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;total&amp;#39;:{$add:[&amp;#39;$yuwen&amp;#39;,&amp;#39;$shuxue&amp;#39;,&amp;#39;$yingyu&amp;#39;]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;total&amp;quot; : 376 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;total&amp;quot; : 375 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;total&amp;quot; : 335 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;total&amp;quot; : 329 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;total&amp;quot; : 329 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;total&amp;quot; : 215 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;divide&quot;&gt;&lt;a href=&quot;#divide&quot; class=&quot;headerlink&quot; title=&quot;$divide&quot;&gt;&lt;/a&gt;$divide&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;计算两数相除&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：查看学生语文成绩，按100分制&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:1,&amp;#39;yuwen&amp;#39;:{$divide:[&amp;#39;$yuwen&amp;#39;,1.5]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;yuwen&amp;quot; : 80.66666666666667 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;yuwen&amp;quot; : 73.33333333333333 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;yuwen&amp;quot; : 66.66666666666667 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;yuwen&amp;quot; : 73.33333333333333 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;yuwen&amp;quot; : 73.33333333333333 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;yuwen&amp;quot; : 65.33333333333333 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;mod&quot;&gt;&lt;a href=&quot;#mod&quot; class=&quot;headerlink&quot; title=&quot;$mod&quot;&gt;&lt;/a&gt;$mod&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;计算两数取摩&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#add&quot;&gt;参见$add&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;multiply&quot;&gt;&lt;a href=&quot;#multiply&quot; class=&quot;headerlink&quot; title=&quot;$multiply&quot;&gt;&lt;/a&gt;$multiply&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;计算两数相乘&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#add&quot;&gt;参见$add&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;subtract&quot;&gt;&lt;a href=&quot;#subtract&quot; class=&quot;headerlink&quot; title=&quot;$subtract&quot;&gt;&lt;/a&gt;$subtract&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;计算两数相减&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#add&quot;&gt;参见$add&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;字符串类型聚合操作符&quot;&gt;&lt;a href=&quot;#字符串类型聚合操作符&quot; class=&quot;headerlink&quot; title=&quot;字符串类型聚合操作符&quot;&gt;&lt;/a&gt;字符串类型聚合操作符&lt;/h4&gt;&lt;h5 id=&quot;concat&quot;&gt;&lt;a href=&quot;#concat&quot; class=&quot;headerlink&quot; title=&quot;$concat&quot;&gt;&lt;/a&gt;$concat&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;字符串追加&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：讲学生和小组串联成一个字段&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name-team&amp;#39;:{$concat:[&amp;#39;$name&amp;#39;,&amp;#39;-&amp;#39;,&amp;#39;$team&amp;#39;]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;bochenlong-1&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;jiaoxinkang-2&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;lisan-3&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;lisan-3&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;lisi-3&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;mingren-2&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;strcasecmp&quot;&gt;&lt;a href=&quot;#strcasecmp&quot; class=&quot;headerlink&quot; title=&quot;$strcasecmp&quot;&gt;&lt;/a&gt;$strcasecmp&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;忽略大小写比较字符串&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：将学生和小组串联成一个字段&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name-team&amp;#39;:{$concat:[&amp;#39;$name&amp;#39;,&amp;#39;-&amp;#39;,&amp;#39;$team&amp;#39;]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;bochenlong-1&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;jiaoxinkang-2&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;lisan-3&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;lisan-3&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;lisi-3&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name-team&amp;quot; : &amp;quot;mingren-2&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;substr&quot;&gt;&lt;a href=&quot;#substr&quot; class=&quot;headerlink&quot; title=&quot;$substr&quot;&gt;&lt;/a&gt;$substr&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;取子串&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:{$substr:[&amp;#39;$name&amp;#39;,0,1]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;b&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;j&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;l&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;l&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;l&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;m&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;toUpper&quot;&gt;&lt;a href=&quot;#toUpper&quot; class=&quot;headerlink&quot; title=&quot;$toUpper &quot;&gt;&lt;/a&gt;$toUpper &lt;span id=&quot;toUpper&quot;&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;将字符串转换为大写&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：&lt;br&gt;&lt;code&gt;db.score.aggregate({$project:{&amp;#39;_id&amp;#39;:0,&amp;#39;name&amp;#39;:{$toUpper:&amp;#39;$name&amp;#39;}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;BOCHENLONG&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;JIAOXINKANG&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;LISAN&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;LISAN&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;LISI&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;name&amp;quot; : &amp;quot;MINGREN&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;toLower&quot;&gt;&lt;a href=&quot;#toLower&quot; class=&quot;headerlink&quot; title=&quot;$toLower&quot;&gt;&lt;/a&gt;$toLower&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;将字符串转换为小写&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;#toUpper&quot;&gt;参见$toUpper&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;日期类型聚合操作符&quot;&gt;&lt;a href=&quot;#日期类型聚合操作符&quot; class=&quot;headerlink&quot; title=&quot;日期类型聚合操作符&quot;&gt;&lt;/a&gt;日期类型聚合操作符&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$dayOfYear&lt;/td&gt;
&lt;td&gt;获取天（1-366）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$dayOfMonth&lt;/td&gt;
&lt;td&gt;获取月（1-31）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$dayOfWeek&lt;/td&gt;
&lt;td&gt;获取星期（1-7）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$year&lt;/td&gt;
&lt;td&gt;获取年&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$month&lt;/td&gt;
&lt;td&gt;获取月（1-12）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$week&lt;/td&gt;
&lt;td&gt;获取星期（0-53）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$hour&lt;/td&gt;
&lt;td&gt;获取分（0-23）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$minute&lt;/td&gt;
&lt;td&gt;获取分（0-59）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$second&lt;/td&gt;
&lt;td&gt;获取秒（0-59）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$millisecond&lt;/td&gt;
&lt;td&gt;获取毫秒（0-999）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;示例文档：&lt;br&gt;{ “_id” : 1, “item” : “abc”, “price” : 10, “quantity” : 2, “date” : ISODate(“2014-01-01T08:15:39.736Z”) }&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db.sales.aggregate(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       $project:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           year: &amp;#123; $year: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           month: &amp;#123; $month: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           day: &amp;#123; $dayOfMonth: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           hour: &amp;#123; $hour: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           minutes: &amp;#123; $minute: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           seconds: &amp;#123; $second: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           milliseconds: &amp;#123; $millisecond: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           dayOfYear: &amp;#123; $dayOfYear: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           dayOfWeek: &amp;#123; $dayOfWeek: &amp;quot;$date&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           week: &amp;#123; $week: &amp;quot;$date&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;_id&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;year&amp;quot; : 2014,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;month&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;day&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;hour&amp;quot; : 8,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;minutes&amp;quot; : 15,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;seconds&amp;quot; : 39,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;milliseconds&amp;quot; : 736,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;dayOfYear&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;dayOfWeek&amp;quot; : 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;week&amp;quot; : 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;条件类型聚合操作符&quot;&gt;&lt;a href=&quot;#条件类型聚合操作符&quot; class=&quot;headerlink&quot; title=&quot;条件类型聚合操作符&quot;&gt;&lt;/a&gt;条件类型聚合操作符&lt;/h4&gt;&lt;h5 id=&quot;cond&quot;&gt;&lt;a href=&quot;#cond&quot; class=&quot;headerlink&quot; title=&quot;$cond &quot;&gt;&lt;/a&gt;$cond &lt;span id=&quot;cond&quot;&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;&lt;br&gt;&lt;code&gt;{ $cond: { if: &amp;lt;boolean-expression&amp;gt;, then: &amp;lt;true-case&amp;gt;, else: &amp;lt;false-case-&amp;gt; } }&lt;/code&gt;&lt;br&gt;or&lt;br&gt;&lt;code&gt;{ $cond: [ &amp;lt;boolean-expression&amp;gt;, &amp;lt;true-case&amp;gt;, &amp;lt;false-case&amp;gt; ] }&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：筛选出全班总分600以上含600分为优秀，500分含500分良，其它差&lt;br&gt;&lt;code&gt;db.score.aggregate({$unwind:&amp;#39;$lizong&amp;#39;},{$group:{&amp;#39;_id&amp;#39;:&amp;#39;$_id&amp;#39;,&amp;#39;name&amp;#39;:{$first:&amp;#39;$name&amp;#39;},&amp;#39;yuwen&amp;#39;:{$first:&amp;#39;$yuwen&amp;#39;},&amp;#39;shuxue&amp;#39;:{$first:&amp;#39;$shuxue&amp;#39;},&amp;#39;yingyu&amp;#39;:{$first:&amp;#39;$yingyu&amp;#39;},lizong:{$sum:&amp;#39;$lizong&amp;#39;}}},{$project:{&amp;#39;name&amp;#39;:1,&amp;#39;zf&amp;#39;:{$add:[&amp;#39;$yuwen&amp;#39;,&amp;#39;$shuxue&amp;#39;,&amp;#39;$yingyu&amp;#39;,&amp;#39;$lizong&amp;#39;]}}},{$project:{&amp;#39;name&amp;#39;:1,&amp;#39;zf&amp;#39;:1,&amp;#39;flag&amp;#39;:{$cond: [ {$gte:[&amp;#39;$zf&amp;#39;,600]},&amp;#39;优秀&amp;#39;,{$cond:[{$and:[{$gte:[&amp;#39;$zf&amp;#39;,500]},{$lt:[&amp;#39;$zf&amp;#39;,600]}]},&amp;#39;良&amp;#39;,&amp;#39;差&amp;#39;]} ]}}})&lt;/code&gt;&lt;br&gt;输出结果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a9d4f4de94710e104213&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;mingren&amp;quot;, &amp;quot;zf&amp;quot; : 325, &amp;quot;flag&amp;quot; : &amp;quot;差&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a97df4de94710e104212&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;lisi&amp;quot;, &amp;quot;zf&amp;quot; : 579, &amp;quot;flag&amp;quot; : &amp;quot;良&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a96df4de94710e104211&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;zf&amp;quot; : 579, &amp;quot;flag&amp;quot; : &amp;quot;良&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a959f4de94710e104210&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;lisan&amp;quot;, &amp;quot;zf&amp;quot; : 555, &amp;quot;flag&amp;quot; : &amp;quot;良&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a936f4de94710e10420f&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;jiaoxinkang&amp;quot;, &amp;quot;zf&amp;quot; : 624, &amp;quot;flag&amp;quot; : &amp;quot;优秀&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5767a91ef4de94710e10420e&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;bochenlong&amp;quot;, &amp;quot;zf&amp;quot; : 604, &amp;quot;flag&amp;quot; : &amp;quot;优秀&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;ifNull&quot;&gt;&lt;a href=&quot;#ifNull&quot; class=&quot;headerlink&quot; title=&quot;$ifNull&quot;&gt;&lt;/a&gt;$ifNull&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;&lt;br&gt;&lt;code&gt;{ $ifNull: [ &amp;lt;expression&amp;gt;, &amp;lt;replacement-expression-if-null&amp;gt; ] }&lt;/code&gt;&lt;br&gt;&lt;a href=&quot;#cond&quot;&gt;参见$cond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更多聚合管道操作见&lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/aggregation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;MongoDB复制&quot;&gt;&lt;a href=&quot;#MongoDB复制&quot; class=&quot;headerlink&quot; title=&quot;MongoDB复制&quot;&gt;&lt;/a&gt;MongoDB复制&lt;/h3&gt;&lt;p&gt;MongoDB复制是将数据同步在多个服务器的过程。复制提供了数据的冗余备份，并在多个服务器上存储数据副本，提高了数据的可用性， 并可以保证数据的安全性。复制还允许您从硬件故障和服务中断中恢复数据。&lt;/p&gt;
&lt;h4 id=&quot;MongoDB复制原理&quot;&gt;&lt;a href=&quot;#MongoDB复制原理&quot; class=&quot;headerlink&quot; title=&quot;MongoDB复制原理&quot;&gt;&lt;/a&gt;MongoDB复制原理&lt;/h4&gt;&lt;p&gt;mongodb的复制至少需要两个节点。其中一个是主节点，负责处理客户端请求，其余的都是从节点，负责复制主节点上的数据。&lt;br&gt;mongodb各个节点常见的搭配方式为：一主一从、一主多从。&lt;br&gt;主节点记录在其上的所有操作oplog，从节点定期轮询主节点获取这些操作，然后对自己的数据副本执行这些操作，从而保证从节点的数据与主节点一致。&lt;/p&gt;
&lt;h4 id=&quot;MongoDB复制设置&quot;&gt;&lt;a href=&quot;#MongoDB复制设置&quot; class=&quot;headerlink&quot; title=&quot;MongoDB复制设置&quot;&gt;&lt;/a&gt;MongoDB复制设置&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;启动MongoDB &lt;code&gt;/usr/bin/mongod -f /etc/mongod.conf --replSet rs0&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;注意，yum安装的MongoDB默认开机启动，使用/etc/mongod.conf，里面设置了MongoDB的数据路径/var/lib/mongo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动一个副本集 &lt;code&gt;rs.initiate()&lt;/code&gt;   &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;info2&amp;quot; : &amp;quot;no configuration specified. Using a default configuration for the set&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;me&amp;quot; : &amp;quot;localhost.localdomain:27017&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;ok&amp;quot; : 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 相应的命令前出现 &lt;code&gt;rs0:PRIMARY&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看集群配置 &lt;code&gt;rs.conf()&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;protocolVersion&amp;quot; : NumberLong(1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;members&amp;quot; : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;_id&amp;quot; : 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;host&amp;quot; : &amp;quot;localhost.localdomain:27017&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;arbiterOnly&amp;quot; : false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;buildIndexes&amp;quot; : true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;hidden&amp;quot; : false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;priority&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;tags&amp;quot; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;slaveDelay&amp;quot; : NumberLong(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;votes&amp;quot; : 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动MongoDB2 &lt;code&gt;mongod --port &amp;#39;27018&amp;#39; --dbpath &amp;#39;/data/db1&amp;#39; --replSet rs0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主库添加子节点 &lt;code&gt;rs.add(&amp;#39;localhost.localdomain:27018&amp;#39;)&lt;/code&gt;，注意这里不能用IP&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;ok&amp;quot; : 1 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看集群配置 &lt;code&gt;rs.conf&lt;/code&gt;,节点已经加入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;protocolVersion&amp;quot; : NumberLong(1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;quot;members&amp;quot; : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;_id&amp;quot; : 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;host&amp;quot; : &amp;quot;localhost.localdomain:27017&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;arbiterOnly&amp;quot; : false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;buildIndexes&amp;quot; : true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;hidden&amp;quot; : false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;priority&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;tags&amp;quot; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;slaveDelay&amp;quot; : NumberLong(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;votes&amp;quot; : 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;_id&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;host&amp;quot; : &amp;quot;localhost.localdomain:27018&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;arbiterOnly&amp;quot; : false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;buildIndexes&amp;quot; : true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;hidden&amp;quot; : false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;priority&amp;quot; : 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;tags&amp;quot; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;slaveDelay&amp;quot; : NumberLong(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;votes&amp;quot; : 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证同步&lt;br&gt;设置从库可读 &lt;code&gt;db.getMongo().setSlaveOk()&lt;/code&gt;&lt;br&gt;查看数据库&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rs0:SECONDARY&amp;gt; show dbs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;local  0.000GB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mydb   0.000GB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看同步到的数据（节点添加即同步主库数据，主库添加数据从库同步）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rs0:SECONDARY&amp;gt; db.score.find()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;576920960a90571c780f81e5&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;wanglei&amp;quot;, &amp;quot;team&amp;quot; : 5, &amp;quot;yuwen&amp;quot; : 111, &amp;quot;shuxue&amp;quot; : 121, &amp;quot;yingyu&amp;quot; : 108, &amp;quot;lizong&amp;quot; : [ 80, 76, 77 ] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;MongoDB分片&quot;&gt;&lt;a href=&quot;#MongoDB分片&quot; class=&quot;headerlink&quot; title=&quot;MongoDB分片&quot;&gt;&lt;/a&gt;MongoDB分片&lt;/h3&gt;&lt;p&gt;在Mongodb里面存在另一种集群，就是分片技术,可以满足MongoDB数据量大量增长的需求。&lt;br&gt;当MongoDB存储海量的数据时，一台机器可能不足以存储数据，也可能不足以提供可接受的读写吞吐量。这时，我们就可以通过在多台机器上分割数据，使得数据库系统能存储和处理更多的数据。&lt;/p&gt;
&lt;h4 id=&quot;MongoDB分片原理&quot;&gt;&lt;a href=&quot;#MongoDB分片原理&quot; class=&quot;headerlink&quot; title=&quot;MongoDB分片原理&quot;&gt;&lt;/a&gt;MongoDB分片原理&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/zArMYmD.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;上图中主要有如下所述三个主要组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shard:用于存储实际的数据块，实际生产环境中一个shard server角色可由几台机器组个一个relica set承担，防止主机单点故障&lt;/li&gt;
&lt;li&gt;Config Server:mongod实例，存储了整个 ClusterMetadata，其中包括 chunk信息。&lt;/li&gt;
&lt;li&gt;Routers:前端路由，客户端由此接入，且让整个集群看上去像单一数据库，前端应用可以透明使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;MongoDB分片配置&quot;&gt;&lt;a href=&quot;#MongoDB分片配置&quot; class=&quot;headerlink&quot; title=&quot;MongoDB分片配置&quot;&gt;&lt;/a&gt;MongoDB分片配置&lt;/h4&gt;&lt;p&gt;分片实例：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;shard server 0 : 27000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shard server 0 bak : 27001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shard server 1 : 27010&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shard server 1 bak : 27011&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config server0 : 21000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;congig serverbak : 21001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;route process0 : 40000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;route process1 : 40001&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动分片&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;MongoDB索引&quot;&gt;&lt;a href=&quot;#MongoDB索引&quot; class=&quot;headerlink&quot; title=&quot;MongoDB索引&quot;&gt;&lt;/a&gt;MongoDB索引&lt;/h3&gt;&lt;p&gt;索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。&lt;/p&gt;
&lt;h4 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;db.COLLECTION_NAME.ensureIndex({KEY:1,...})&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;语法中KEY值为你要创建的索引字段，1为指定按升序创建索引，-1为按降序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ensureIndex()接收可选参数，参见列表：&lt;br&gt;
    
    </summary>
    
      <category term="NoSql" scheme="http://bochenlong.github.io/categories/NoSql/"/>
    
    
      <category term="MongoDB" scheme="http://bochenlong.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB学习笔记02【基础知识】</title>
    <link href="http://bochenlong.github.io/2016/06/16/MongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002%E3%80%90%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E3%80%91/"/>
    <id>http://bochenlong.github.io/2016/06/16/MongoDB学习笔记02【基础知识】/</id>
    <published>2016-06-16T02:25:58.000Z</published>
    <updated>2016-06-16T08:42:43.321Z</updated>
    
    <content type="html">&lt;p&gt;在MongoDB中基本的概念是文档、集合、数据库，下图与RDBMS对比，比较容易理解。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SQL术语&lt;/th&gt;
&lt;th&gt;MongoDB术语&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;database&lt;/td&gt;
&lt;td&gt;database&lt;/td&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;collection&lt;/td&gt;
&lt;td&gt;数据库表/集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;row&lt;/td&gt;
&lt;td&gt;document&lt;/td&gt;
&lt;td&gt;数据记录行/文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;column&lt;/td&gt;
&lt;td&gt;field&lt;/td&gt;
&lt;td&gt;数据字段/域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;joins&lt;/td&gt;
&lt;td&gt;表连接,MongoDB不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;primary key&lt;/td&gt;
&lt;td&gt;primary key&lt;/td&gt;
&lt;td&gt;主键,MongoDB自动将_id字段设置为主键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;数据库DataBase&quot;&gt;&lt;a href=&quot;#数据库DataBase&quot; class=&quot;headerlink&quot; title=&quot;数据库DataBase&quot;&gt;&lt;/a&gt;数据库DataBase&lt;/h3&gt;&lt;p&gt;一个MongoDB可以建多个数据库。MongoDB的默认数据库为”db”,即启动时前创建的”/data/db”目录。&lt;/p&gt;
&lt;h4 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;查看数据库 &lt;code&gt;show dbs&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;如果数据库为空，则不会显示&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;显示当前数据库对象 &lt;code&gt;db&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换/创建数据库 &lt;code&gt;use local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除数据库 &lt;code&gt;db.dropDatabase()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;    
&lt;h4 id=&quot;命名规范&quot;&gt;&lt;a href=&quot;#命名规范&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h4&gt;&lt;p&gt;数据库的命名需符合以下条件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 不能是空字符串（””)。&lt;br&gt;2 不得含有’ ‘（空格)、.、$、/、\和\0 (空宇符)。&lt;br&gt;3 应全部小写。&lt;br&gt;4 最多64字节。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意有一些数据库名是保留的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;admin：&lt;/strong&gt;从权限的角度来看，这是”root”数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。&lt;br&gt;&lt;strong&gt;local：&lt;/strong&gt; 这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合&lt;br&gt;&lt;strong&gt;config：&lt;/strong&gt; 当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;文档Document&quot;&gt;&lt;a href=&quot;#文档Document&quot; class=&quot;headerlink&quot; title=&quot;文档Document&quot;&gt;&lt;/a&gt;文档Document&lt;/h3&gt;&lt;p&gt;文档是一个键值(key-value)对(即BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型。例如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;quot;site&amp;quot;:&amp;quot;bochenlong.github.io&amp;quot;, &amp;quot;name&amp;quot;:&amp;quot;MongoDB学习笔记本02&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文档中的键/值对是有序的。&lt;/li&gt;
&lt;li&gt;文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。&lt;/li&gt;
&lt;li&gt;MongoDB区分类型和大小写。&lt;/li&gt;
&lt;li&gt;MongoDB的文档不能有重复的键。&lt;/li&gt;
&lt;li&gt;文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;常用命令-1&quot;&gt;&lt;a href=&quot;#常用命令-1&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h4&gt;&lt;h5 id=&quot;插入文档&quot;&gt;&lt;a href=&quot;#插入文档&quot; class=&quot;headerlink&quot; title=&quot;插入文档&quot;&gt;&lt;/a&gt;插入文档&lt;/h5&gt;&lt;p&gt;&lt;code&gt;db.COLLECTION_NAME.insert(document)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果集合不存在，会自动创建&lt;br&gt;亦可以定义document=({})变量再做插入&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;查看文档&quot;&gt;&lt;a href=&quot;#查看文档&quot; class=&quot;headerlink&quot; title=&quot;查看文档&quot;&gt;&lt;/a&gt;查看文档&lt;/h5&gt;&lt;p&gt;&lt;code&gt;db.COLLECTION_NAME.find()&lt;/code&gt;&lt;br&gt;输出结果美观 &lt;code&gt;db.COLLECTION_NAME.find().pretty()&lt;/code&gt;&lt;br&gt;查看一个文档 &lt;code&gt;db.COLLECTION_NAME.findOne()&lt;/code&gt;&lt;br&gt;查看指定个数文档 &lt;code&gt;db.COLLECTION_NAME.find().limit(NUMBER)&lt;/code&gt;&lt;br&gt;跳过指定个数文档 &lt;code&gt;db.COLLECTION_NAME.find().skip(NUMBER)&lt;/code&gt;&lt;br&gt;指定排序查看文档 &lt;code&gt;db.CONLLECTION_NAME.find().sort({key:value}}&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 和 -1 来指定排序的方式，其中 1 为升序排列，而-1是用于降序排列。默认按照文档的升序排列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;更新文档&quot;&gt;&lt;a href=&quot;#更新文档&quot; class=&quot;headerlink&quot; title=&quot;更新文档&quot;&gt;&lt;/a&gt;更新文档&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db.COLLECTION_NAME.update(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;query&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;update&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      upsert:&amp;lt;boolean&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      multi:&amp;lt;boolean&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      writeConcern:&amp;lt;document&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;query :&lt;/strong&gt; update的查询条件，类似sql update查询内where后面的。&lt;br&gt;&lt;strong&gt;update :&lt;/strong&gt; update的对象和一些更新的操作符（如$,$inc…）等，也可以理解为sql update查询内set后面的&lt;br&gt;&lt;strong&gt;upsert :&lt;/strong&gt; 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。&lt;br&gt;&lt;strong&gt;multi :&lt;/strong&gt; 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。&lt;br&gt;&lt;strong&gt;writeConcern :&lt;/strong&gt;可选，抛出异常的级别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 例如：&lt;code&gt;db.user.update({&amp;#39;name&amp;#39;:&amp;#39;bochenlong&amp;#39;},{$set:{&amp;#39;name&amp;#39;:&amp;#39;bochenlong1&amp;#39;}})&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;替换文档&quot;&gt;&lt;a href=&quot;#替换文档&quot; class=&quot;headerlink&quot; title=&quot;替换文档&quot;&gt;&lt;/a&gt;替换文档&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db.COLLECTION_NAME.save(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;document&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     writeConcern: &amp;lt;document&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;document :&lt;/strong&gt; 文档数据&lt;br&gt;&lt;strong&gt;writeConcern :&lt;/strong&gt;可选，抛出异常的级别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 例如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db.user.save(&amp;#123;&amp;quot;_id&amp;quot; : ObjectId(&amp;quot;5762436b7b4000ad140079ef&amp;quot;), &amp;quot;name&amp;quot; : &amp;quot;bochenlong2&amp;quot;, &amp;quot;age&amp;quot; : 1&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;删除文档&quot;&gt;&lt;a href=&quot;#删除文档&quot; class=&quot;headerlink&quot; title=&quot;删除文档&quot;&gt;&lt;/a&gt;删除文档&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db.COLLECTION_NAME.remove(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;query&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    justOne: &amp;lt;boolean&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    writeConcern: &amp;lt;document&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;query :&lt;/strong&gt;（可选）删除的文档的条件。&lt;br&gt;&lt;strong&gt;justOne : &lt;/strong&gt;（可选）如果设为 true 或 1，则只删除一个文档。&lt;br&gt;&lt;strong&gt;writeConcern :&lt;/strong&gt;（可选）抛出异常的级别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 例如：&lt;code&gt;db.user.remove({&amp;quot;name&amp;quot;:&amp;quot;bochenlong2&amp;quot;},{justOne:true})&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;命名规范-1&quot;&gt;&lt;a href=&quot;#命名规范-1&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h4&gt;&lt;p&gt;文档键命名规范：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;键不能含有\0 (空字符)。这个字符用来表示键的结尾。&lt;/li&gt;
&lt;li&gt;.和$有特别的意义，只有在特定环境下才能使用。&lt;/li&gt;
&lt;li&gt;以下划线”_”开头的键是保留的(不是严格要求的)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;条件操作符&quot;&gt;&lt;a href=&quot;#条件操作符&quot; class=&quot;headerlink&quot; title=&quot;条件操作符&quot;&gt;&lt;/a&gt;条件操作符&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;格式&lt;/th&gt;
&lt;th&gt;范例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{&amp;lt;key&amp;gt;:&amp;lt;value&amp;gt;}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“name”:”bochenlong”}).pretty()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{&amp;lt;key&amp;gt;:{$lt:&amp;lt;value&amp;gt;}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“age”:{$lt:50}}).pretty()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小于或等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{&amp;lt;key&amp;gt;:{$lte:&amp;lt;value&amp;gt;}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“age”:{$lte:50}}).pretty()    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{&amp;lt;key&amp;gt;:{$gt:&amp;lt;value&amp;gt;}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“age”:{$gt:50}}).pretty()    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大于或等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{&amp;lt;key&amp;gt;:{$gte:&amp;lt;value&amp;gt;}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“age”:{$gte:50}}).pretty()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{&amp;lt;key&amp;gt;:{$ne:&amp;lt;value&amp;gt;}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“age”:{$ne:50}}).pretty()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AND&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{key1:value1, key2:value2...}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“age”:{$lt:50},”name”:”bochenlong”})&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OR&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{$or:[key1:value1, key2:value2...]}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({$or:[{“age”:{$lt:50}},{“name”:”bochenlong”}]})&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$type&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{&amp;lt;key&amp;gt;:{$type:&amp;lt;value&amp;gt;}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;db.user.find({“name”:{$type:2}})&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;$type的value主要为下： Double-1,String-2,Object-3,Array-4,Binary data-5,Undefined-6(已废弃),Object id-7,Boolean-8,Date-9,Null-10,Regular Expression-11,JavaScript-13,Symbol-14,JavaScript (with scope)-15,32-bit integer-16,Timestamp-17,64-bit integer-18,Min key-225(Query with -1),Max key-127&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;集合Collection&quot;&gt;&lt;a href=&quot;#集合Collection&quot; class=&quot;headerlink&quot; title=&quot;集合Collection&quot;&gt;&lt;/a&gt;集合Collection&lt;/h3&gt;&lt;p&gt;集合就是 MongoDB 文档组。集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。比如，我们可以将以下不同数据结构的文档插入到集合中：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;quot;site&amp;quot;:&amp;quot;bochenlong.github.io&amp;quot;, &amp;quot;name&amp;quot;:&amp;quot;MongoDB学习笔记本02&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;quot;site&amp;quot;:&amp;quot;bochenlong.github.io&amp;quot;, &amp;quot;name&amp;quot;:&amp;quot;MongoDB学习笔记本02&amp;quot;,num:&amp;quot;001&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当第一个文档插入时，集合就会被创建。&lt;/p&gt;
&lt;h4 id=&quot;命名规范-2&quot;&gt;&lt;a href=&quot;#命名规范-2&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;集合名不能是空字符串””。&lt;/li&gt;
&lt;li&gt;集合名不能含有\0字符（空字符)，这个字符表示集合名的结尾。&lt;/li&gt;
&lt;li&gt;集合名不能以”system.”开头，这是为系统集合保留的前缀。&lt;/li&gt;
&lt;li&gt;用户创建的集合名字不能含有保留字符。有些驱动程序的确支持在集合名里面包含，这是因为某些系统生成的集合中包含该字符。除非你要访问这种系统创建的集合，否则千万不要在名字里出现$。　&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Capped-Collection&quot;&gt;&lt;a href=&quot;#Capped-Collection&quot; class=&quot;headerlink&quot; title=&quot;Capped Collection&quot;&gt;&lt;/a&gt;Capped Collection&lt;/h4&gt;&lt;p&gt;Capped Collection就是固定大小的Collection。它有很&lt;strong&gt;高的性能以及队列过期的特性&lt;/strong&gt;(过期按照插入的顺序)。&lt;br&gt;Capped Collections是高性能自动的维护对象的插入顺序。它非常适合类似记录日志的功能。和标准的collection不同，你必须要显式的创建一个Capped Collection,指定一个collection的大小，单位是字节。Collection的数据存储空间值是提前分配的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建 &lt;code&gt;db.createCollection(&amp;quot;mycc&amp;quot;, {capped:true, size:1000})&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在capped collection中，你能添加新的对象。&lt;br&gt;能进行更新，然而，对象不会增加存储空间。如果增加，更新就会失败 。&lt;br&gt;数据库不允许进行删除。使用drop()方法删除collection所有的行。&lt;br&gt;删除之后，你必须显式的重新创建这个collection。&lt;br&gt;在32bit机器中，capped collection最大存储为1e9个字节。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;元数据&quot;&gt;&lt;a href=&quot;#元数据&quot; class=&quot;headerlink&quot; title=&quot;元数据&quot;&gt;&lt;/a&gt;元数据&lt;/h3&gt;&lt;p&gt;数据库的信息是存储在集合中。它们使用了系统的命名空间 &lt;code&gt;dbname.system.*&lt;/code&gt;；在MongoDB数据库中名字空间 &lt;dbname&gt;.system.* 是包含多种系统信息的特殊集合(Collection)，如下:&lt;/dbname&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;集合命名空间&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dbname.system.namespaces&lt;/td&gt;
&lt;td&gt;列出所有名字空间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbname.system.indexes&lt;/td&gt;
&lt;td&gt;列出所有索引。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbname.system.profile&lt;/td&gt;
&lt;td&gt;包含数据库概要(profile)信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbname.system.users&lt;/td&gt;
&lt;td&gt;列出所有可访问数据库的用户。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbname.local.sources&lt;/td&gt;
&lt;td&gt;包含复制对端（slave）的服务器信息和状态。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在&lt;code&gt;system.indexes&lt;/code&gt;插入数据，可以创建索引。但除此之外该表信息是不可变的(特殊的drop index命令将自动更新相关信息)。&lt;code&gt;system.users&lt;/code&gt;是可修改的。&lt;code&gt;system.profile&lt;/code&gt;是可删除的。&lt;/p&gt;
&lt;h3 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boolean&lt;/td&gt;
&lt;td&gt;布尔值。用于存储布尔值（真/假）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Double&lt;/td&gt;
&lt;td&gt;双精度浮点值。用于存储浮点值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Min/Max keys&lt;/td&gt;
&lt;td&gt;将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Arrays&lt;/td&gt;
&lt;td&gt;用于将数组或列表或多个值存储为一个键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Timestam&lt;/td&gt;
&lt;td&gt;p    时间戳。记录文档修改或添加的具体时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Object&lt;/td&gt;
&lt;td&gt;用于内嵌文档。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Null&lt;/td&gt;
&lt;td&gt;用于创建空值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Symbol&lt;/td&gt;
&lt;td&gt;符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Date&lt;/td&gt;
&lt;td&gt;日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Object ID&lt;/td&gt;
&lt;td&gt;对象 ID。用于创建文档的 ID。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Binary Data&lt;/td&gt;
&lt;td&gt;二进制数据。用于存储二进制数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Code&lt;/td&gt;
&lt;td&gt;代码类型。用于在文档中存储 JavaScript 代码。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Regular expression&lt;/td&gt;
&lt;td&gt;正则表达式类型。用于存储正则表达式。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在MongoDB中基本的概念是文档、集合、数据库，下图与RDBMS对比，比较容易理解。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SQL术语&lt;/th&gt;
&lt;th&gt;MongoDB术语&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;database&lt;/td&gt;
&lt;td&gt;database&lt;/td&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;collection&lt;/td&gt;
&lt;td&gt;数据库表/集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;row&lt;/td&gt;
&lt;td&gt;document&lt;/td&gt;
&lt;td&gt;数据记录行/文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;column&lt;/td&gt;
&lt;td&gt;field&lt;/td&gt;
&lt;td&gt;数据字段/域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;joins&lt;/td&gt;
&lt;td&gt;表连接,MongoDB不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;primary key&lt;/td&gt;
&lt;td&gt;primary key&lt;/td&gt;
&lt;td&gt;主键,MongoDB自动将_id字段设置为主键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;数据库DataBase&quot;&gt;&lt;a href=&quot;#数据库DataBase&quot; class=&quot;headerlink&quot; title=&quot;数据库DataBase&quot;&gt;&lt;/a&gt;数据库DataBase&lt;/h3&gt;&lt;p&gt;一个MongoDB可以建多个数据库。MongoDB的默认数据库为”db”,即启动时前创建的”/data/db”目录。&lt;/p&gt;
&lt;h4 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;查看数据库 &lt;code&gt;show dbs&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;如果数据库为空，则不会显示&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;显示当前数据库对象 &lt;code&gt;db&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换/创建数据库 &lt;code&gt;use local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除数据库 &lt;code&gt;db.dropDatabase()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="NoSql" scheme="http://bochenlong.github.io/categories/NoSql/"/>
    
    
      <category term="MongoDB" scheme="http://bochenlong.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB学习笔记01【搭建环境】</title>
    <link href="http://bochenlong.github.io/2016/06/16/MongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001%E3%80%90%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83%E3%80%91/"/>
    <id>http://bochenlong.github.io/2016/06/16/MongoDB学习笔记01【搭建环境】/</id>
    <published>2016-06-16T01:35:11.000Z</published>
    <updated>2016-06-16T05:58:10.978Z</updated>
    
    <content type="html">&lt;h3 id=&quot;MongoDB简介&quot;&gt;&lt;a href=&quot;#MongoDB简介&quot; class=&quot;headerlink&quot; title=&quot;MongoDB简介&quot;&gt;&lt;/a&gt;MongoDB简介&lt;/h3&gt;&lt;p&gt;MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。MongoDB 将数据存储为一个文档，数据结构由键值(key=&amp;gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。&lt;/p&gt;
&lt;h3 id=&quot;MongoDB特点&quot;&gt;&lt;a href=&quot;#MongoDB特点&quot; class=&quot;headerlink&quot; title=&quot;MongoDB特点&quot;&gt;&lt;/a&gt;MongoDB特点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MongoDB的提供了一个面向文档存储，操作起来比较简单和容易。&lt;/li&gt;
&lt;li&gt;你可以在MongoDB记录中设置任何属性的索引 (如：FirstName=”Sameer”,Address=”8 Gandhi Road”)来实现更快的排序。&lt;/li&gt;
&lt;li&gt;你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。&lt;/li&gt;
&lt;li&gt;如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。&lt;/li&gt;
&lt;li&gt;Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。&lt;/li&gt;
&lt;li&gt;MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。&lt;/li&gt;
&lt;li&gt;Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。&lt;/li&gt;
&lt;li&gt;Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。&lt;/li&gt;
&lt;li&gt;Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。&lt;/li&gt;
&lt;li&gt;GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。&lt;/li&gt;
&lt;li&gt;MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。&lt;/li&gt;
&lt;li&gt;MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。&lt;/li&gt;
&lt;li&gt;MongoDB安装简单。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;MongoDB安装&quot;&gt;&lt;a href=&quot;#MongoDB安装&quot; class=&quot;headerlink&quot; title=&quot;MongoDB安装&quot;&gt;&lt;/a&gt;MongoDB安装&lt;/h3&gt;&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;p&gt;&lt;em&gt;系统环境&lt;/em&gt; &lt;code&gt;CentOS release 6.6 (Final)&lt;/code&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;em&gt;软件安装&lt;/em&gt;，参照官网使用 &lt;strong&gt;yum&lt;/strong&gt; 方式安装&lt;br&gt;1 配置 &lt;strong&gt;yum&lt;/strong&gt; 源&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ touch /etc/yum.repos.d/mongodb-org-3.2.repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ vi /etc/yum.repos.d/mongodb-org-3.2.repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[mongodb-org-2.6]&lt;br&gt;  name=MongoDB 2.6 Repository&lt;br&gt;  baseurl=&lt;a href=&quot;http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/&lt;/a&gt;&lt;br&gt;  gpgcheck=0&lt;br&gt;  enabled=1&lt;br&gt;2 安装MongoDB&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum install -y mongodb-org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者自定义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum install -y mongodb-org-3.2.7 mongodb-org-server-3.2.7 mongodb-org-shell-3.2.7 mongodb-org-mongos-3.2.7 mongodb-org-tools-3.2.7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h4&gt;&lt;p&gt;首先，需要手动创建MongoDB的数据库目录，默认为&lt;code&gt;/data/db&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mkdir /data/db&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mongod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;亦可以通过指定目录来运行MongoDB：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mongod --dbpath&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要注意，MongoDB官方建议我们使用&lt;code&gt;非root&lt;/code&gt;用户且关闭&lt;code&gt;transparent_hugepage&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016-06-15T11:42:34.371+0800 I CONTROL  [initandlisten] ** WARNING: You are running this process as the root user, which is not recommended.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-06-15T11:42:34.371+0800 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is &amp;apos;always&amp;apos;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-06-15T11:42:34.371+0800 I CONTROL  [initandlisten] **        We suggest setting it to &amp;apos;never&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-06-15T11:42:34.371+0800 I CONTROL  [initandlisten] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-06-15T11:42:34.371+0800 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is &amp;apos;always&amp;apos;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-06-15T11:42:34.371+0800 I CONTROL  [initandlisten] **        We suggest setting it to &amp;apos;never&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个问题，MongoDB在 &lt;strong&gt;yum&lt;/strong&gt; 安装的时候会自动创建 &lt;strong&gt;mongod&lt;/strong&gt; 用户，因此我们使用 &lt;strong&gt;mongod&lt;/strong&gt;用户启动：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat /etc/passwd &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; mongod:x:497:496:mongod:/var/lib/mongo:/bin/false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cp /etc/skel/.bash_logout .bash_profile .bashrc /home/mongod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /var/lib/mongo 为mongod用户的根目录，初始化用户根目录，否则切换用户出现$ -bash-4.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ vi /etc/passwd &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; /bin/false是最严格的禁止login选项，一切服务都不能用。修改/bin/false为/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ su - mongod &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mongod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第二、三个问题，Mongod官方建议关闭Linux的内存巨页（脚本方式）：&lt;br&gt;&lt;strong&gt;1 创建开机启动服务&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ touch /etc/init.d/disable-transparent-hugepages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ vi /etc/init.d/disable-transparent-hugepages&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### BEGIN INIT INFO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Provides:          disable-transparent-hugepages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Required-Start:    $local_fs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Required-Stop:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# X-Start-Before:    mongod mongodb-mms-automation-agent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Default-Start:     2 3 4 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Default-Stop:      0 1 6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Short-Description: Disable Linux transparent huge pages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Description:       Disable Linux transparent huge pages, to improve&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#                    database performance.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### END INIT INFO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case $1 in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  start)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ -d /sys/kernel/mm/transparent_hugepage ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      thp_path=/sys/kernel/mm/transparent_hugepage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif [ -d /sys/kernel/mm/redhat_transparent_hugepage ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      thp_path=/sys/kernel/mm/redhat_transparent_hugepage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;apos;never&amp;apos; &amp;gt; $&amp;#123;thp_path&amp;#125;/enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;apos;never&amp;apos; &amp;gt; $&amp;#123;thp_path&amp;#125;/defrag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unset thp_path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2 设置开机启动&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chmod 755 /etc/init.d/disable-transparent-hugepages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ 6/16/2016 10:08:56 AM&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;具体也可参见官方 &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/#configure-thp-tuned&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/#configure-thp-tuned&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;MongoDB交互&quot;&gt;&lt;a href=&quot;#MongoDB交互&quot; class=&quot;headerlink&quot; title=&quot;MongoDB交互&quot;&gt;&lt;/a&gt;MongoDB交互&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;MongoDB Shell是MongoDB自带的交互式Javascript shell，用来对MongoDB进行操作和管理的交互式环境。&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]# mongo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MongoDB shell version: 3.2.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connecting to: test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;亦可以通过 &lt;code&gt;mongodb://username:password@hostname/dbname&lt;/code&gt;，比如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 链接本地数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongodb://localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 安全模式链接到本地数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongodb://localhost/?safe=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 直接连接第一个服务器，无论是replica set一部分或者主服务器或者从服务器。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongodb://host1,host2,host3/?connect=direct;slaveOk=true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参数选项说明：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;replicaSet=name&lt;/td&gt;
&lt;td&gt;验证replica set的名称。 Impliesconnect=replicaSet.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;slaveOk=true/false&lt;/td&gt;
&lt;td&gt;true:在connect=direct模式下，驱动会连接第一台机器，即使这台服务器不是主。在connect=replicaSet模式下，驱动会发送所有的写请求到主并且把读取操作分布在其他从服务器。false: 在 connect=direct模式下，驱动会自动找寻主服务器. 在connect=replicaSet 模式下，驱动仅仅连接主服务器，并且所有的读写命令都连接到主服务器。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;safe=true/false&lt;/td&gt;
&lt;td&gt;true: 在执行更新操作之后，驱动都会发送getLastError命令来确保更新成功。(还要参考 wtimeoutMS). false: 在每次更新之后，驱动不会发送getLastError来确保更新成功。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w=n&lt;/td&gt;
&lt;td&gt;驱动添加 { w : n } 到getLastError命令. 应用于safe=true。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wtimeoutMS=ms&lt;/td&gt;
&lt;td&gt;驱动添加 { wtimeout : ms } 到 getlasterror 命令. 应用于 safe=true.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fsync=true/false&lt;/td&gt;
&lt;td&gt;true: 驱动添加 { fsync : true } 到 getlasterror 命令.应用于 safe=true.  false: 驱动不会添加到getLastError命令中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;journal=true/false&lt;/td&gt;
&lt;td&gt;如果设置为 true, 同步到 journal (在提交到数据库前写入到实体中). 应用于 safe=true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;connectTimeoutMS=ms&lt;/td&gt;
&lt;td&gt;可以打开连接的时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;socketTimeoutMS=ms&lt;/td&gt;
&lt;td&gt;发送和接受sockets的时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;MongoDB 提供了简单的 HTTP 用户界面。 如果你想启用该功能，需要在启动的时候指定参数 –rest 。&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/6WQwxFw.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;MongoDB关闭&quot;&gt;&lt;a href=&quot;#MongoDB关闭&quot; class=&quot;headerlink&quot; title=&quot;MongoDB关闭&quot;&gt;&lt;/a&gt;MongoDB关闭&lt;/h3&gt;&lt;p&gt;从MongoDB的admin中关闭（推荐用这种方法）：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ use admin   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; switched to db admin    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ db.shutdownServer()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; server should be down...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;br&gt;&lt;code&gt;`
mongod --shutdown&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;MongoDB简介&quot;&gt;&lt;a href=&quot;#MongoDB简介&quot; class=&quot;headerlink&quot; title=&quot;MongoDB简介&quot;&gt;&lt;/a&gt;MongoDB简介&lt;/h3&gt;&lt;p&gt;MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。MongoDB 将数据存储为一个文档，数据结构由键值(key=&amp;gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。&lt;/p&gt;
&lt;h3 id=&quot;MongoDB特点&quot;&gt;&lt;a href=&quot;#MongoDB特点&quot; class=&quot;headerlink&quot; title=&quot;MongoDB特点&quot;&gt;&lt;/a&gt;MongoDB特点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MongoDB的提供了一个面向文档存储，操作起来比较简单和容易。&lt;/li&gt;
&lt;li&gt;你可以在MongoDB记录中设置任何属性的索引 (如：FirstName=”Sameer”,Address=”8 Gandhi Road”)来实现更快的排序。&lt;/li&gt;
&lt;li&gt;你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。&lt;/li&gt;
&lt;li&gt;如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。&lt;/li&gt;
&lt;li&gt;Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。&lt;/li&gt;
&lt;li&gt;MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。&lt;/li&gt;
&lt;li&gt;Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。&lt;/li&gt;
&lt;li&gt;Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。&lt;/li&gt;
&lt;li&gt;Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。&lt;/li&gt;
&lt;li&gt;GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。&lt;/li&gt;
&lt;li&gt;MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。&lt;/li&gt;
&lt;li&gt;MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。&lt;/li&gt;
&lt;li&gt;MongoDB安装简单。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;MongoDB安装&quot;&gt;&lt;a href=&quot;#MongoDB安装&quot; class=&quot;headerlink&quot; title=&quot;MongoDB安装&quot;&gt;&lt;/a&gt;MongoDB安装&lt;/h3&gt;&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;p&gt;&lt;em&gt;系统环境&lt;/em&gt; &lt;code&gt;CentOS release 6.6 (Final)&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="NoSql" scheme="http://bochenlong.github.io/categories/NoSql/"/>
    
    
      <category term="MongoDB" scheme="http://bochenlong.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Reactor模式</title>
    <link href="http://bochenlong.github.io/2016/06/04/Reactor%E6%A8%A1%E5%BC%8F/"/>
    <id>http://bochenlong.github.io/2016/06/04/Reactor模式/</id>
    <published>2016-06-04T10:45:24.000Z</published>
    <updated>2016-06-04T10:48:59.237Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.blogjava.net/DLevin/archive/2015/09/02/427045.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载 http://www.blogjava.net/DLevin/archive/2015/09/02/427045.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是Reactor模式&quot;&gt;&lt;a href=&quot;#什么是Reactor模式&quot; class=&quot;headerlink&quot; title=&quot;什么是Reactor模式&quot;&gt;&lt;/a&gt;什么是Reactor模式&lt;/h3&gt;&lt;p&gt;要回答这个问题，首先当然是求助Google或Wikipedia，其中Wikipedia上说：“The reactor design pattern is an event handling pattern for handling service requests delivered concurrently by one or more inputs. The service handler then demultiplexes the incoming requests and dispatches them synchronously to associated request handlers.”。从这个描述中，我们知道Reactor模式首先是事件驱动的，有一个或多个并发输入源，有一个Service Handler，有多个Request Handlers；这个Service Handler会同步的将输入的请求（Event）多路复用的分发给相应的Request Handler。如果用图来表达：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/jIKK929.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;p&gt;从结构上，这有点类似生产者消费者模式，即有一个或多个生产者将事件放入一个Queue中，而一个或多个消费者主动的从这个Queue中Poll事件来处理；而Reactor模式则并没有Queue来做缓冲，每当一个Event输入到Service Handler之后，该Service Handler会主动的根据不同的Event类型将其分发给对应的Request Handler来处理。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;更学术的，这篇文章（&lt;a href=&quot;http://www.dre.vanderbilt.edu/~schmidt/PDF/reactor-siemens.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reactor An Object Behavioral Pattern for Demultiplexing and Dispatching Handles for Synchronous Events&lt;/a&gt;）上说：“The Reactor design pattern handles service requests that are delivered concurrently to an application by one or more clients. Each service in an application may consistent of several methods and is represented by a separate event handler that is responsible for dispatching service-specific requests. Dispatching of event handlers is performed by an initiation dispatcher, which manages the registered event handlers. Demultiplexing of service requests is performed by a synchronous event demultiplexer. &lt;strong&gt;Also known as Dispatcher, Notifier&lt;/strong&gt;”。这段描述和Wikipedia上的描述类似，有多个输入源，有多个不同的EventHandler（RequestHandler）来处理不同的请求，Initiation Dispatcher用于管理EventHander，EventHandler首先要注册到Initiation Dispatcher中，然后Initiation Dispatcher根据输入的Event分发给注册的EventHandler；然而Initiation Dispatcher并不监听Event的到来，这个工作交给Synchronous Event Demultiplexer来处理。&lt;/p&gt;
&lt;h3 id=&quot;Reactor模式结构&quot;&gt;&lt;a href=&quot;#Reactor模式结构&quot; class=&quot;headerlink&quot; title=&quot;Reactor模式结构&quot;&gt;&lt;/a&gt;Reactor模式结构&lt;/h3&gt;&lt;p&gt;在解决了什么是Reactor模式后，我们来看看Reactor模式是由什么模块构成。图是一种比较简洁形象的表现方式，因而先上一张图来表达各个模块的名称和他们之间的关系：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/PPN8vxL.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Handle&lt;/strong&gt;：即操作系统中的句柄，是对资源在操作系统层面上的一种抽象，它可以是打开的文件、一个连接(Socket)、Timer等。由于Reactor模式一般使用在网络编程中，因而这里一般指Socket Handle，即一个网络连接（Connection，在Java NIO中的Channel）。这个Channel注册到Synchronous Event Demultiplexer中，以监听Handle中发生的事件，对ServerSocketChannnel可以是CONNECT事件，对SocketChannel可以是READ、WRITE、CLOSE事件等。&lt;br&gt;&lt;strong&gt;Synchronous Event Demultiplexer&lt;/strong&gt;：阻塞等待一系列的Handle中的事件到来，如果阻塞等待返回，即表示在返回的Handle中可以不阻塞的执行返回的事件类型。这个模块一般使用操作系统的select来实现。在Java NIO中用Selector来封装，当Selector.select()返回时，可以调用Selector的selectedKeys()方法获取Set&lt;selectionkey&gt;，一个SelectionKey表达一个有事件发生的Channel以及该Channel上的事件类型。上图的“Synchronous Event Demultiplexer —notifies–&amp;gt; Handle”的流程如果是对的，那内部实现应该是select()方法在事件到来后会先设置Handle的状态，然后返回。不了解内部实现机制，因而保留原图。&lt;br&gt;&lt;strong&gt;Initiation Dispatcher&lt;/strong&gt;：用于管理Event Handler，即EventHandler的容器，用以注册、移除EventHandler等；另外，它还作为Reactor模式的入口调用Synchronous Event Demultiplexer的select方法以阻塞等待事件返回，当阻塞等待返回时，根据事件发生的Handle将其分发给对应的Event Handler处理，即回调EventHandler中的handle_event()方法。&lt;br&gt;&lt;strong&gt;Event Handler&lt;/strong&gt;：定义事件处理方法：handle_event()，以供InitiationDispatcher回调使用。&lt;br&gt;&lt;strong&gt;Concrete Event Handler&lt;/strong&gt;：事件EventHandler接口，实现特定事件处理逻辑。&lt;/selectionkey&gt;&lt;/p&gt;
&lt;h3 id=&quot;Reactor模式模块之间的交互&quot;&gt;&lt;a href=&quot;#Reactor模式模块之间的交互&quot; class=&quot;headerlink&quot; title=&quot;Reactor模式模块之间的交互&quot;&gt;&lt;/a&gt;Reactor模式模块之间的交互&lt;/h3&gt;&lt;p&gt;简单描述一下Reactor各个模块之间的交互流程，先从序列图开始：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/uxy6qKS.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化InitiationDispatcher，并初始化一个Handle到EventHandler的Map。&lt;/li&gt;
&lt;li&gt;注册EventHandler到InitiationDispatcher中，每个EventHandler包含对相应Handle的引用，从而建立Handle到EventHandler的映射（Map）。&lt;/li&gt;
&lt;li&gt;调用InitiationDispatcher的handle_events()方法以启动Event Loop。在Event Loop中，调用select()方法（Synchronous Event Demultiplexer）阻塞等待Event发生。&lt;/li&gt;
&lt;li&gt;当某个或某些Handle的Event发生后，select()方法返回，InitiationDispatcher根据返回的Handle找到注册的EventHandler，并回调该EventHandler的handle_events()方法。&lt;/li&gt;
&lt;li&gt;在EventHandler的handle_events()方法中还可以向InitiationDispatcher中注册新的Eventhandler，比如对AcceptorEventHandler来，当有新的client连接时，它会产生新的EventHandler以处理新的连接，并注册到InitiationDispatcher中。&lt;h3 id=&quot;Reactor模式实现&quot;&gt;&lt;a href=&quot;#Reactor模式实现&quot; class=&quot;headerlink&quot; title=&quot;Reactor模式实现&quot;&gt;&lt;/a&gt;Reactor模式实现&lt;/h3&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在&lt;a href=&quot;http://www.dre.vanderbilt.edu/~schmidt/PDF/reactor-siemens.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reactor An Object Behavioral Pattern for Demultiplexing and Dispatching Handles for Synchronous Events&lt;/a&gt;中，一直以Logging Server来分析Reactor模式，这个Logging Server的实现完全遵循这里对Reactor描述，因而放在这里以做参考。Logging Server中的Reactor模式实现分两个部分：Client连接到Logging Server和Client向Logging Server写Log。因而对它的描述分成这两个步骤。&lt;br&gt;&lt;strong&gt;Client连接到Logging Server&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/N163p4G.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Logging Server注册LoggingAcceptor到InitiationDispatcher。&lt;/li&gt;
&lt;li&gt;Logging Server调用InitiationDispatcher的handle_events()方法启动。&lt;/li&gt;
&lt;li&gt;InitiationDispatcher内部调用select()方法（Synchronous Event Demultiplexer），阻塞等待Client连接。&lt;/li&gt;
&lt;li&gt;Client连接到Logging Server。&lt;/li&gt;
&lt;li&gt;InitiationDisptcher中的select()方法返回，并通知LoggingAcceptor有新的连接到来。 &lt;/li&gt;
&lt;li&gt;LoggingAcceptor调用accept方法accept这个新连接。&lt;/li&gt;
&lt;li&gt;LoggingAcceptor创建新的LoggingHandler。&lt;/li&gt;
&lt;li&gt;新的LoggingHandler注册到InitiationDispatcher中(同时也注册到Synchonous Event Demultiplexer中)，等待Client发起写log请求。&lt;br&gt;&lt;strong&gt;Client向Logging Server写Log&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/9ZslKQe.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;Client发送log到Logging server。&lt;/li&gt;
&lt;li&gt;InitiationDispatcher监测到相应的Handle中有事件发生，返回阻塞等待，根据返回的Handle找到LoggingHandler，并回调LoggingHandler中的handle_event()方法。&lt;/li&gt;
&lt;li&gt;LoggingHandler中的handle_event()方法中读取Handle中的log信息。&lt;/li&gt;
&lt;li&gt;将接收到的log写入到日志文件、数据库等设备中。&lt;br&gt;3.4步骤循环直到当前日志处理完成。&lt;/li&gt;
&lt;li&gt;返回到InitiationDispatcher等待下一次日志写请求。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在&lt;a href=&quot;http://www.dre.vanderbilt.edu/~schmidt/PDF/reactor-siemens.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reactor An Object Behavioral Pattern for Demultiplexing and Dispatching Handles for Synchronous Events&lt;/a&gt;有对Reactor模式的C++的实现版本，多年不用C++，因而略过。 &lt;/p&gt;
&lt;h3 id=&quot;Java-NIO对Reactor的实现&quot;&gt;&lt;a href=&quot;#Java-NIO对Reactor的实现&quot; class=&quot;headerlink&quot; title=&quot;Java NIO对Reactor的实现&quot;&gt;&lt;/a&gt;Java NIO对Reactor的实现&lt;/h3&gt;&lt;p&gt;在Java的NIO中，对Reactor模式有无缝的支持，即使用Selector类封装了操作系统提供的Synchronous Event Demultiplexer功能。这个Doug Lea已经在&lt;a href=&quot;http://gee.cs.oswego.edu/dl/cpjslides/nio.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scalable IO In Java&lt;/a&gt;中有非常深入的解释了，因而不再赘述，另外&lt;a href=&quot;http://www.cnblogs.com/luxiaoxun/archive/2015/03/11/4331110.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;对Doug Lea的&lt;a href=&quot;http://gee.cs.oswego.edu/dl/cpjslides/nio.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scalable IO In Java&lt;/a&gt;有一些简单解释，至少它的代码格式比Doug Lea的PPT要整洁一些。&lt;/p&gt;
&lt;p&gt;需要指出的是，不同这里使用InitiationDispatcher来管理EventHandler，在Doug Lea的版本中使用SelectionKey中的Attachment来存储对应的EventHandler，因而不需要注册EventHandler这个步骤，或者设置Attachment就是这里的注册。而且在这篇文章中，Doug Lea从单线程的Reactor、Acceptor、Handler实现这个模式出发；演化为将Handler中的处理逻辑多线程化，实现类似Proactor模式，此时所有的IO操作还是单线程的，因而再演化出一个Main Reactor来处理CONNECT事件(Acceptor)，而多个Sub Reactor来处理READ、WRITE等事件(Handler)，这些Sub Reactor可以分别再自己的线程中执行，从而IO操作也多线程化。这个最后一个模型正是Netty中使用的模型。并且在&lt;a href=&quot;http://www.dre.vanderbilt.edu/~schmidt/PDF/reactor-siemens.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reactor An Object Behavioral Pattern for Demultiplexing and Dispatching Handles for Synchronous Events的9.5 Determine the Number of Initiation Dispatchers in an Application&lt;/a&gt;中也有相应的描述。&lt;/p&gt;
&lt;h3 id=&quot;EventHandler接口定义&quot;&gt;&lt;a href=&quot;#EventHandler接口定义&quot; class=&quot;headerlink&quot; title=&quot;EventHandler接口定义&quot;&gt;&lt;/a&gt;EventHandler接口定义&lt;/h3&gt;&lt;p&gt;对EventHandler的定义有两种设计思路：single-method设计和multi-method设计：&lt;br&gt;&lt;strong&gt;A single-method interface&lt;/strong&gt;：它将Event封装成一个Event Object，EventHandler只定义一个handle_event(Event event)方法。这种设计的好处是有利于扩展，可以后来方便的添加新的Event类型，然而在子类的实现中，需要判断不同的Event类型而再次扩展成 不同的处理方法，从这个角度上来说，它又不利于扩展。另外在Netty3的使用过程中，由于它不停的创建ChannelEvent类，因而会引起GC的不稳定。&lt;br&gt;&lt;strong&gt;A multi-method interface&lt;/strong&gt;：这种设计是将不同的Event类型在 EventHandler中定义相应的方法。这种设计就是Netty4中使用的策略，其中一个目的是避免ChannelEvent创建引起的GC不稳定， 另外一个好处是它可以避免在EventHandler实现时判断不同的Event类型而有不同的实现，然而这种设计会给扩展新的Event类型时带来非常 大的麻烦，因为它需要该接口。&lt;/p&gt;
&lt;p&gt;关于Netty4对Netty3的改进可以参考这里：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/GA2cEho.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;为什么使用Reactor模式&quot;&gt;&lt;a href=&quot;#为什么使用Reactor模式&quot; class=&quot;headerlink&quot; title=&quot;为什么使用Reactor模式&quot;&gt;&lt;/a&gt;为什么使用Reactor模式&lt;/h3&gt;&lt;p&gt;归功与Netty和Java NIO对Reactor的宣传，本文慕名而学习的Reactor模式，因而已经默认Reactor具有非常优秀的性能，然而慕名归慕名，到这里，我还是要不得不问自己Reactor模式的好处在哪里？即为什么要使用这个Reactor模式？在&lt;a href=&quot;http://www.dre.vanderbilt.edu/~schmidt/PDF/reactor-siemens.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reactor An Object Behavioral Pattern for Demultiplexing and Dispatching Handles for Synchronous Events&lt;/a&gt;中是这么说的：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/H8mk36t.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这些貌似是很多模式的共性：解耦、提升复用性、模块化、可移植性、事件驱动、细力度的并发控制等，因而并不能很好的说明什么，特别是它鼓吹的对性能的提升，这里并没有体现出来。当然在这篇文章的开头有描述过另一种直观的实现：Thread-Per-Connection，即传统的实现，提到了这个传统实现的以下问题：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/Dtv9aoR.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;对于性能，它其实就是第一点关于Efficiency的描述，即线程的切换、同步、数据的移动会引起性能问题。也就是说从性能的角度上，它最大的提升就是减少了性能的使用，即不需要每个Client对应一个线程。我的理解，其他业务逻辑处理很多时候也会用到相同的线程，IO读写操作相对CPU的操作还是要慢很多，即使Reactor机制中每次读写已经能保证非阻塞读写，这里可以减少一些线程的使用，但是这减少的线程使用对性能有那么大的影响吗？答案貌似是肯定的，这篇论文（&lt;a href=&quot;http://www.eecs.harvard.edu/~mdw/papers/seda-sosp01.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SEDA: Staged Event-Driven Architecture - An Architecture for Well-Conditioned, Scalable Internet Service&lt;/a&gt;）对随着线程的增长带来性能降低做了一个统计：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/SYj6Q9o.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这个统计中，每个线程从磁盘中读8KB数据，每个线程读同一个文件，因而数据本身是缓存在操作系统内部的，即减少IO的影响；所有线程是事先分配的，不会有线程启动的影响；所有任务在测试内部产生，因而不会有网络的影响。该统计数据运行环境：Linux 2.2.14，2GB内存，4-way 500MHz Pentium III。从图中可以看出，随着线程的增长，吞吐量在线程数为8个左右的时候开始线性下降，并且到64个以后而迅速下降，其相应事件也在线程达到256个后指数上升。即1+1&amp;lt;2，因为线程切换、同步、数据移动会有性能损失，线程数增加到一定数量时，这种性能影响效果会更加明显。&lt;/p&gt;
&lt;p&gt;对于这点，还可以参考&lt;a href=&quot;https://en.wikipedia.org/wiki/C10k_problem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C10K Problem&lt;/a&gt;，用以描述同时有10K个Client发起连接的问题，到2010年的时候已经出现10M Problem了。&lt;/p&gt;
&lt;p&gt;当然也有人说：&lt;a href=&quot;https://en.wikipedia.org/wiki/C10k_problem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Threads are expensive are no longer valid&lt;/a&gt;.在不久的将来可能又会发生不同的变化，或者这个变化正在、已经发生着？没有做过比较仔细的测试，因而不敢随便断言什么，然而本人观点，即使线程变的影响并没有以前那么大，使用Reactor模式，甚至时SEDA模式来减少线程的使用，再加上其他解耦、模块化、提升复用性等优点，还是值得使用的。&lt;br&gt;Reactor模式的缺点&lt;/p&gt;
&lt;h3 id=&quot;Reactor模式的缺点貌似也是显而易见的：&quot;&gt;&lt;a href=&quot;#Reactor模式的缺点貌似也是显而易见的：&quot; class=&quot;headerlink&quot; title=&quot;Reactor模式的缺点貌似也是显而易见的：&quot;&gt;&lt;/a&gt;Reactor模式的缺点貌似也是显而易见的：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;相比传统的简单模型，Reactor增加了一定的复杂性，因而有一定的门槛，并且不易于调试。&lt;/li&gt;
&lt;li&gt;Reactor模式需要底层的Synchronous Event Demultiplexer支持，比如Java中的Selector支持，操作系统的select系统调用支持，如果要自己实现Synchronous Event Demultiplexer可能不会有那么高效。&lt;/li&gt;
&lt;li&gt;Reactor模式在IO读写数据时还是在同一个线程中实现的，即使使用多个Reactor机制的情况下，那些共享一个Reactor的Channel如果出现一个长时间的数据读写，会影响这个Reactor中其他Channel的相应时间，比如在大文件传输时，IO操作就会影响其他Client的相应时间，因而对这种操作，使用传统的Thread-Per-Connection或许是一个更好的选择，或则此时使用Proactor模式。   &lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;IO复用模型&quot;&gt;&lt;a href=&quot;#IO复用模型&quot; class=&quot;headerlink&quot; title=&quot;IO复用模型&quot;&gt;&lt;/a&gt;IO复用模型&lt;/h3&gt;&lt;p&gt;Linux提供select/poll，进程通过将一个或多个fd传递给select或者poll系统调用，阻塞在select操作上，这样select/poll可以帮我们侦测多个fd是否处于就绪状态。select/poll是顺序扫描fd是否就绪，而且支持的fd数量有限，因此它的使用受到了一些制约。LInux还提供一个epoll系统调用，epoll使用基于时间驱动方式代替顺序扫描，因此性能更高。当有fd就绪时，立即回调函数rollback，如下图：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/tBDw7mO.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.blogjava.net/DLevin/archive/2015/09/02/427045.html&quot;&gt;转载 http://www.blogjava.net/DLevin/archive/2015/09/02/427045.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是Reactor模式&quot;&gt;&lt;a href=&quot;#什么是Reactor模式&quot; class=&quot;headerlink&quot; title=&quot;什么是Reactor模式&quot;&gt;&lt;/a&gt;什么是Reactor模式&lt;/h3&gt;&lt;p&gt;要回答这个问题，首先当然是求助Google或Wikipedia，其中Wikipedia上说：“The reactor design pattern is an event handling pattern for handling service requests delivered concurrently by one or more inputs. The service handler then demultiplexes the incoming requests and dispatches them synchronously to associated request handlers.”。从这个描述中，我们知道Reactor模式首先是事件驱动的，有一个或多个并发输入源，有一个Service Handler，有多个Request Handlers；这个Service Handler会同步的将输入的请求（Event）多路复用的分发给相应的Request Handler。如果用图来表达：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/jIKK929.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;p&gt;从结构上，这有点类似生产者消费者模式，即有一个或多个生产者将事件放入一个Queue中，而一个或多个消费者主动的从这个Queue中Poll事件来处理；而Reactor模式则并没有Queue来做缓冲，每当一个Event输入到Service Handler之后，该Service Handler会主动的根据不同的Event类型将其分发给对应的Request Handler来处理。&lt;br&gt;
    
    </summary>
    
      <category term="Design Pattern" scheme="http://bochenlong.github.io/categories/Design-Pattern/"/>
    
    
      <category term="Reactor" scheme="http://bochenlong.github.io/tags/Reactor/"/>
    
  </entry>
  
  <entry>
    <title>Redis配置文件示例</title>
    <link href="http://bochenlong.github.io/2016/05/24/Redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%A4%BA%E4%BE%8B/"/>
    <id>http://bochenlong.github.io/2016/05/24/Redis配置文件示例/</id>
    <published>2016-05-24T04:48:25.484Z</published>
    <updated>2016-05-24T04:48:25.484Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Redis 配置文件示例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 为了加载配置，Redis必须以配置文件作为第一参数启动。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# ./redis-server /path/to/redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当你需要配置内存大小的时候，必须要带上单位，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 通常的格式就是 1k 5gb 4M 等酱紫：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1k =&amp;gt; 1000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1kb =&amp;gt; 1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1m =&amp;gt; 1000000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1mb =&amp;gt; 1024*1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1g =&amp;gt; 1000000000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1gb =&amp;gt; 1024*1024*1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 单位不区分大小写，你写1GB 1Gb 1gB 是一样的的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################## INCLUDES ###################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 假如说你有一个可用于所有的 redis server 的标准配置模板，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但针对某些 server 又需要一些个性化的设置，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 你可以使用 include 来包含一些其他的配置文件，这对你来说是非常有用的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但是要注意哦，include 是不能被 config rewrite 命令改写的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 由于 redis 总是以最后的加工线作为一个配置指令值，所以你最好是把 include 放在这个文件的最前面，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 以避免在运行时覆盖配置的改变，相反，你就把它放在后面（其实就是你把标准模板放在前面，需要特殊配置的写在后面会覆盖标准配置）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# include /path/to/local.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# include /path/to/other.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################## NETWORK #####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认情况下，redis 在 server 上所有有效的网络接口上监听客户端连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 你如果只想让它在一个或者多个网络接口上监听，那你就绑定一个IP或者多个IP。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 示例，多个IP用空格隔开:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# bind 192.168.1.100 10.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# bind 127.0.0.1 ::1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bind 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 保护模式防止 redis 实例被网络操作恶意关闭。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当保护模式开启时，而且：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       1）redis 监听全部的网络接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       2）没有配置密码验证&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 时，redis 服务器只接受本地（127.0.0.1 and ::1）或者是Unix实例的socket链接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认情况下，保护模式是开启的，除非你确定你接受其他的客户端链接，即使这些链接没有密码验证、指定网络接口时才关闭。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protected-mode yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;320&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;321&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;322&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;323&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;324&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;325&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;326&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;327&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;328&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;329&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;330&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;331&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;332&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;333&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;334&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;335&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;336&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;337&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;338&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;339&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;340&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;341&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;342&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;343&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;344&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;345&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;346&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;347&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;348&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;349&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;350&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;351&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;352&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;353&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;354&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;355&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;356&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;357&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;358&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;359&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;360&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;361&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;362&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;363&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;364&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;365&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;366&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;367&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;368&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;369&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;370&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;371&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;372&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;373&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;374&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;375&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;376&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;377&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;378&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;379&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;380&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;381&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;382&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;383&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;384&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;385&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;386&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;387&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;388&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;389&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;390&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;391&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;392&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;393&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;394&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;395&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;396&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;397&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;398&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;399&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;400&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;401&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;402&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;403&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;404&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;405&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;406&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;407&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;408&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;409&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;410&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;411&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;412&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;413&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;414&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;415&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;416&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;417&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;418&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;419&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;420&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;421&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;422&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;423&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;424&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;425&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;426&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;427&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;428&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;429&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;430&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;431&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;432&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;433&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;434&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;435&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;436&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;437&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;438&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;439&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;440&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;441&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;442&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;443&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;444&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;445&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;446&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;447&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;448&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;449&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;450&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;451&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;452&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;453&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;454&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;455&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;456&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;457&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;458&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;459&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;460&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;461&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;462&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;463&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;464&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;465&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;466&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;467&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;468&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;469&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;470&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;471&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;472&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;473&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;474&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;475&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;476&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;477&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;478&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;479&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;480&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;481&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;482&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;483&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;484&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;485&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;486&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;487&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;488&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;489&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;490&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;491&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;492&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;493&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;494&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;495&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;496&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;497&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;498&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;499&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;500&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;501&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;502&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;503&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;504&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;505&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;506&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;507&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;508&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;509&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;510&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;511&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;512&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;513&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;514&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;515&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;516&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;517&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;518&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;519&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;520&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;521&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;522&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;523&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;524&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;525&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;526&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;527&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;528&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;529&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;530&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;531&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;532&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;533&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;534&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;535&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;536&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;537&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;538&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;539&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;540&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;541&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;542&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;543&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;544&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;545&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;546&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;547&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;548&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;549&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;550&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;551&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;552&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;553&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;554&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;555&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;556&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;557&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;558&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;559&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;560&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;561&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;562&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 指定Redis监听端口，默认端口为6379&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port 6379&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# tcp连接数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在高并发环境下你需要一个高backlog值来避免慢客户端连接问题。注意Linux内核默默地将这个值减小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 到/proc/sys/net/core/somaxconn的值，所以需要确认增大somaxconn和tcp_max_syn_backlog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 两个值来达到想要的效果。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp-backlog 511&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果redis不监听端口，还怎么与外界通信呢，其实redis还支持通过unix socket方式来接收请求。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 可以通过unixsocket配置项来指定unix socket文件的路径，并通过unixsocketperm来指定文件的权限。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定用来监听Unix套套接字的路径。没有默认值， 所以在没有指定的情况下Redis不会监听Unix套接字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# unixsocket /tmp/redis.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# unixsocketperm 700&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当一个redis-client一直没有请求发向server端，那么server端有权主动关闭这个连接，可以通过timeout来设置“空闲超时时限”，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 单位为秒。当客户端在这段时间内没有发出任何指令，那么关闭该连。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认值：0代表禁用，永不关闭 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timeout 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# TCP keepalive.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果非零，则设置SO_KEEPALIVE选项来向空闲连接的客户端发送ACK，由于以下两个原因这是很有用的：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1）能够检测无响应的对端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 2）让该连接中间的网络设备知道这个连接还存活&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在Linux上，这个指定的值(单位：秒)就是发送ACK的时间间隔。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注意：要关闭这个连接需要两倍的这个时间值。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在其他内核上这个时间间隔由内核配置决定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# TCP连接保活策略，可以通过tcp-keepalive配置项来进行设置，单位为秒，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 假如设置为60秒，则server端会每60秒向连接空闲的客户端发起一次ACK请求，以检查客户端是否已经挂掉，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 对于无响应的客户端则会关闭其连接。所以关闭一个连接最长需要120秒的时间。如果设置为0，则不会进行保活检测&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这个选项的一个合理值是60秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp-keepalive 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################# GENERAL #####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程方式。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注意配置成守护进程后Redis会将进程号写入文件/var/run/redis.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;daemonize no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你在 upstart or systemd 中运行redis，redis 提供你supervision tree功能；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 具体配置：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   supervised no      - no supervision interaction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   supervised auto    - detect upstart or systemd method based on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#                        UPSTART_JOB or NOTIFY_SOCKET environment variables&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Note: these supervision methods only signal &amp;quot;process is ready.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       They do not enable continuous liveness pings back to your supervisor.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;supervised no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pidfile /var/run/redis.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定日志记录级别 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# debug  记录很多信息，用于开发和测试&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# varbose 很多精简的有用信息，不像debug会记录那么多&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# notice 普通的verbose，常用于生产环境&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# warning 只有非常重要或者严重的信息会记录到日志 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;loglevel notice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指明日志文件名。也可以使用&amp;quot;stdout&amp;quot;来强制让Redis把日志信息写到标准输出上。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认为标准输出，如果配置Redis为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发给/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logfile &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 要使用系统日志记录器，只要设置 &amp;quot;syslog-enabled&amp;quot; 为 &amp;quot;yes&amp;quot; 就可以了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 然后根据需要设置其他一些syslog参数就可以了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# syslog-enabled no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定linux系统日志syslog的标示符，若是&amp;quot;syslog-enabled=no&amp;quot;，则这个选项无效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# syslog-ident redis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定linux系统日志syslog 设备(facility)， 必须是USER或者LOCAL0到LOCAL7之间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# syslog-facility local0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置数据库的数目。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认数据库是 DB 0，你可以在每个连接上使用 select &amp;lt;dbid&amp;gt; 命令选择一个不同的数据库，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但是 dbid 必须是一个介于 0 到 databasees - 1 之间的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;databases 16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################ SNAPSHOTTING  ################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 存 DB 到磁盘：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   格式：save &amp;lt;间隔时间（秒）&amp;gt; &amp;lt;写入次数&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   根据给定的时间间隔和写入次数将数据保存到磁盘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   下面的例子的意思是：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   900 秒后如果至少有 1 个 key 的值变化，则保存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   300 秒后如果至少有 10 个 key 的值变化，则保存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   60 秒后如果至少有 10000 个 key 的值变化，则保存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   注意：你可以注释掉所有的 save 行来停用保存功能。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   也可以直接一个空字符串来实现停用：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   save &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;save 900 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;save 300 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;save 60 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果用户开启了RDB快照功能，那么在redis持久化数据到磁盘时如果出现失败，默认情况下，redis会停止接受所有的写请求。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这样做的好处在于可以让用户很明确的知道内存中的数据和磁盘上的数据已经存在不一致了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果redis不顾这种不一致，一意孤行的继续接收写请求，就可能会引起一些灾难性的后果。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果下一次RDB持久化成功，redis会自动恢复接受写请求。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当然，如果你不在乎这种数据不一致或者有其他的手段发现和控制这种不一致的话，你完全可以关闭这个功能，以便在快照写入失败时，也能确保redis继续接受新的写请求。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stop-writes-on-bgsave-error yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 是否在 dump .rdb 数据库的时候使用 LZF 压缩字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认都设为 yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你希望保存子进程节省点 cpu ，你就设置它为 no ，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 不过这个数据集可能就会比较大&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rdbcompression yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 因为版本5的RDB有一个CRC64算法的校验和放在了文件的最后。这将使文件格式更加可靠但在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 生产和加载RDB文件时，这有一个性能消耗(大约10%)，所以你可以关掉它来获取最好的性能。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 生成的关闭校验的RDB文件有一个0的校验和，它将告诉加载代码跳过检查&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rdbchecksum yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 数据库的文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbfilename dump.rdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 数据库的文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dir ./&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################# REPLICATION #################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 主从复制。使用 slaveof 来让一个 redis 实例成为另一个reids 实例的副本。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注意这个只需要在 slave 上配置。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当本机为从服务时，在Redis启动时，它会自动从主服务进行数据同步。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# slaveof &amp;lt;masterip&amp;gt; &amp;lt;masterport&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果主服务master设置了密码(通过下面的 &amp;quot;requirepass&amp;quot; 选项来配置)，slave服务连接master的密码，那么slave在开始同步之前必须进行身份验证，否则它的同步请求会被拒绝。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当本机为从服务时，设置主服务的连接密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# masterauth &amp;lt;master-password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当一个slave失去和master的连接，或者同步正在进行中，slave的行为有两种可能：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1) 如果 slave-serve-stale-data 设置为 &amp;quot;yes&amp;quot; (默认值)，slave会继续响应客户端请求，可能是正常数据，也可能是还没获得值的空数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 2) 如果 slave-serve-stale-data 设置为 &amp;quot;no&amp;quot;，slave会回复&amp;quot;正在从master同步(SYNC with master in progress)&amp;quot;来处理各种请求，除了 INFO 和 SLAVEOF 命令。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave-serve-stale-data yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 你可以配置一个 slave 实体是否接受写入操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 通过写入操作来存储一些短暂的数据对于一个 slave 实例来说可能是有用的，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 因为相对从 master 重新同步数而言，据数据写入到 slave 会更容易被删除。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但是如果客户端因为一个错误的配置写入，也可能会导致一些问题。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 从Redis2.6默认所有的slave为只读&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注意：只读的 slaves 没有被设计成在 internet 上暴露给不受信任的客户端。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 它仅仅是一个针对误用实例的一个保护层。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 一个只读的slave支持所有的管理命令比如config,debug等。为了限制你可以用&amp;apos;rename-command&amp;apos;来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 隐藏所有的管理和危险命令来增强只读slave的安全性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave-read-only yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 新的slave和重新连接的slave是不能继续接收差异复制，需要做“完全同步”。 RDB文件是主到从的传送。发送可以以两种不同的方式发生：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   1 磁盘备份（默认）：Redis的主服务器创建一个新的进程，在磁盘上写入文件RDB。然后由父进程以增量的方式传输到slave。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   2 无盘：Redis的主创建一个新的进程，直接写入RDB文件到slave的socket。不经过硬盘和主进程。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 基于硬盘的话，RDB文件创建后，一旦创建完毕，可以同时服务更多的slave。基于socket的话， 新slave来了后，得排队（如果超出了repl-diskless-sync-delay还没来），完事儿一个再进行下一个。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当用diskless的时候，master等待一个repl-diskless-sync-delay的秒数，如果没slave来的话，就直接传，后来的得排队等了。否则就可以一起传。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 由于现在带宽已经很大了，对于缓慢的硬盘，无盘备份效果会更好。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repl-diskless-sync no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 无盘同步延迟时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repl-diskless-sync-delay 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# slave根据指定的时间间隔向服务器发送ping请求。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 时间间隔可以通过 repl_ping_slave_period 来设置。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认10秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# repl-ping-slave-period 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 以下选项设置同步的超时时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1）slave在与master SYNC期间有大量数据传输，造成超时&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 2）在slave角度，master超时，包括数据、ping等&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 3）在master角度，slave超时，当master发送REPLCONF ACK pings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 确保这个值大于指定的repl-ping-slave-period，否则在主从间流量不高时每次都会检测到超时&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# repl-timeout 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 是否在slave套接字发送SYNC之后禁用 TCP_NODELAY ？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你选择“yes”Redis将使用更少的TCP包和带宽来向slaves发送数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但是这将使数据传输到slave上有延迟，Linux内核的默认配置会达到40毫秒，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你选择了 &amp;quot;no&amp;quot; 数据传输到salve的延迟将会减少但要使用更多的带宽默认我们会为低延迟做优化，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但高流量情况或主从之间的跳数过多时，把这个选项设置为“yes”是个不错的选择。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repl-disable-tcp-nodelay no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置数据备份的backlog大小。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# backlog是一个slave在一段时间内断开连接时记录salve数据的缓冲，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 所以一个slave在重新连接时，不必要全量的同步，而是一个增量同步就足够了，将在断开连接的这段时间内slave丢失的部分数据传送给它。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 同步的backlog越大，slave能够进行增量同步并且允许断开连接的时间就越长。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# backlog只分配一次并且至少需要一个slave连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# repl-backlog-size 1mb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 当master在一段时间内不再与任何slave连接，backlog将会释放。以下选项配置了从最后一个slave断开开始计时多少秒后，backlog缓冲将会释放。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 0表示永不释放backlog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# repl-backlog-ttl 3600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# slave的优先级是一个整数展示在Redis的Info输出中。如果master不再正常工作了，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Sentinel将用它来选择一个slave提升=升为master。优先级数字小的salve会优先考虑提升为master，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 所以例如有三个slave优先级分别为10，100，25，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Sentinel将挑选优先级最小数字为10的slave。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 0作为一个特殊的优先级，标识这个slave不能作为master，所以一个优先级为0的slave永远不会被Sentinel挑选提升为master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认优先级为100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slave-priority 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果master少于N个延时小于等于M秒的已连接slave，就可以停止接收写操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# N个slave需要是“oneline”状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 延时是以秒为单位，并且必须小于等于指定值，是从最后一个从slave接收到的ping（通常每秒发送）开始计数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 例如至少需要3个延时小于等于10秒的slave用下面的指令：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 两者之一设置为0将禁用这个功能。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认 min-slaves-to-write 值是0（该功能禁用）并且 min-slaves-max-lag 值是10。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# For example to require at least 3 slaves with a lag &amp;lt;= 10 seconds use:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# min-slaves-to-write 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# min-slaves-max-lag 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Setting one or the other to 0 disables the feature.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# By default min-slaves-to-write is set to 0 (feature disabled) and&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# min-slaves-max-lag is set to 10.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################## SECURITY ###################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 要求客户端在处理任何命令时都要验证身份和密码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这个功能在有你不信任的其它客户端能够访问redis服务器的环境里非常有用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 为了向后兼容的话这段应该注释掉。而且大多数人不需要身份验证(例如:它们运行在自己的服务器上)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 警告：因为Redis太快了，所以外面的人可以尝试每秒150k的密码来试图破解密码。这意味着你需要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 一个高强度的密码，否则破解太容易了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# requirepass foobared&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 命令重命名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在共享环境下，可以为危险命令改变名字。比如，你可以为 CONFIG 改个其他不太容易猜到的名字，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这样内部的工具仍然可以使用，而普通的客户端将不行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 例如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 也可以通过改名为空字符串来完全禁用一个命令：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# rename-command CONFIG &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 请注意：改变命令名字被记录到AOF文件或被传送到从服务器可能产生问题。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################### LIMITS ####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置最多同时连接的客户端数量。默认这个限制是10000个客户端，然而如果Redis服务器不能配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 处理文件的限制数来满足指定的值，那么最大的客户端连接数就被设置成当前文件限制数减32（因&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 为Redis服务器保留了一些文件描述符作为内部使用）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 一旦达到这个限制，Redis会关闭所有新连接并发送错误&amp;apos;max number of clients reached&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# maxclients 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 不要用比设置的上限更多的内存。一旦内存使用达到上限，Redis会根据选定的回收策略（参见：maxmemmory-policy）删除key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果因为删除策略Redis无法删除key，或者策略设置为 &amp;quot;noeviction&amp;quot;，Redis会回复需要更&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 多内存的错误信息给命令。例如，SET,LPUSH等等，但是会继续响应像Get这样的只读命令。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在使用Redis作为LRU缓存，或者为实例设置了硬性内存限制的时候（使用 &amp;quot;noeviction&amp;quot; 策略）的时候，这个选项通常事很有用的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 警告：当有多个slave连上达到内存上限的实例时，master为同步slave的输出缓冲区所需&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 内存不计算在使用内存中。这样当驱逐key时，就不会因网络问题 / 重新同步事件触发驱逐key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 的循环，反过来slaves的输出缓冲区充满了key被驱逐的DEL命令，这将触发删除更多的key，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 直到这个数据库完全被清空为止&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 总之...如果你需要附加多个slave，建议你设置一个稍小maxmemory限制，这样系统就会有空闲&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 的内存作为slave的输出缓存区(但是如果最大内存策略设置为&amp;quot;noeviction&amp;quot;的话就没必要了)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# maxmemory &amp;lt;bytes&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 最大内存策略：如果达到内存限制了，Redis如何选择删除key。你可以在下面五个行为里选：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# volatile-lru -&amp;gt; 根据LRU算法生成的过期时间来删除。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# allkeys-lru -&amp;gt; 根据LRU算法删除任何key。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# volatile-random -&amp;gt; 根据过期设置来随机删除key。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# allkeys-&amp;gt;random -&amp;gt; 无差别随机删。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# volatile-ttl -&amp;gt; 根据最近过期时间来删除（辅以TTL） &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# noeviction -&amp;gt; 谁也不删，直接在写操作时返回错误。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注意：对所有策略来说，如果Redis找不到合适的可以删除的key都会在写操作时返回一个错误。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       目前为止涉及的命令：set setnx setex append&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       getset mset msetnx exec sort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认值如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# maxmemory-policy noeviction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# LRU和最小TTL算法的实现都不是很精确，但是很接近（为了省内存），所以你可以用样本量做检测。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 例如：默认Redis会检查5个key然后取最旧的那个，你可以通过下面的配置指令来设置样本的个数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# maxmemory-samples 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;############################## APPEND ONLY MODE ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认情况下，Redis是异步的把数据导出到磁盘上。这种模式在很多应用里已经足够好，但Redis进程&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 出问题或断电时可能造成一段时间的写操作丢失(这取决于配置的save指令)。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# AOF是一种提供了更可靠的替代持久化模式，例如使用默认的数据写入文件策略（参见后面的配置）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在遇到像服务器断电或单写情况下Redis自身进程出问题但操作系统仍正常运行等突发事件时，Redis能只丢失1秒的写操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# AOF和RDB持久化能同时启动并且不会有问题。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果AOF开启，那么在启动时Redis将加载AOF文件，它更能保证数据的可靠性。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 请查看 http://redis.io/topics/persistence 来获取更多信息.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;appendonly no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 追加加文件名字（默认：&amp;quot;appendonly.aof&amp;quot;）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;appendfilename &amp;quot;appendonly.aof&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# fsync() 系统调用告诉操作系统把数据写到磁盘上，而不是等更多的数据进入输出缓冲区。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 有些操作系统会真的把数据马上刷到磁盘上；有些则会尽快去尝试这么做。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Redis支持三种不同的模式：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# no：不要立刻刷，只有在操作系统需要刷的时候再刷。比较快。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# always：每次写操作都立刻写入到aof文件。慢，但是最安全。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# everysec：每秒写一次。折中方案。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认的 &amp;quot;everysec&amp;quot; 通常来说能在速度和数据安全性之间取得比较好的平衡。根据你的理解来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 决定，如果你能放宽该配置为&amp;quot;no&amp;quot; 来获取更好的性能(但如果你能忍受一些数据丢失，可以考虑使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认的快照持久化模式)，或者相反，用“always”会比较慢但比everysec要更安全。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 请查看下面的文章来获取更多的细节&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# http://antirez.com/post/redis-persistence-demystified.html &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果不能确定，就用 &amp;quot;everysec&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# appendfsync always&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;appendfsync everysec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# appendfsync no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果AOF的同步策略设置成 &amp;quot;always&amp;quot; 或者 &amp;quot;everysec&amp;quot;，并且后台的存储进程（后台存储或写入AOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 日志）会产生很多磁盘I/O开销。某些Linux的配置下会使Redis因为 fsync()系统调用而阻塞很久。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注意，目前对这个情况还没有完美修正，甚至不同线程的 fsync() 会阻塞我们同步的write(2)调用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 为了缓解这个问题，可以用下面这个选项。它可以在 BGSAVE 或 BGREWRITEAOF 处理时阻止fsync()。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这就意味着如果有子进程在进行保存操作，那么Redis就处于&amp;quot;不可同步&amp;quot;的状态。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这实际上是说，在最差的情况下可能会丢掉30秒钟的日志数据。（默认Linux设定）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果把这个设置成&amp;quot;yes&amp;quot;带来了延迟问题，就保持&amp;quot;no&amp;quot;，这是保存持久数据的最安全的方式。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;no-appendfsync-on-rewrite no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 自动重写AOF文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果AOF日志文件增大到指定百分比，Redis能够通过 BGREWRITEAOF 自动重写AOF日志文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 工作原理：Redis记住上次重写时AOF文件的大小（如果重启后还没有写操作，就直接用启动时的AOF大小）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这个基准大小和当前大小做比较。如果当前大小超过指定比例，就会触发重写操作。你还需要指定被重写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 日志的最小尺寸，这样避免了达到指定百分比但尺寸仍然很小的情况还要重写。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定百分比为0会禁用AOF自动重写特性。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auto-aof-rewrite-percentage 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auto-aof-rewrite-min-size 64mb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# AOF文件可能在尾部是不完整的（上次system关闭有问题，尤其是mount ext4文件系统时没有加上data=ordered选项。只会发生在os死时，redis自己死不会不完整）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 那redis重启时load进内存的时候就有问题了。发生的时候，可以选择redis启动报错，或者load尽量多正常的数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果aof-load-truncated是yes，会自动发布一个log给客户端然后load（默认）。如果是no，用户必须手动redis-check-aof修复AOF文件才可以。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aof-load-truncated yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################ LUA SCRIPTING  ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果达到最大时间限制（毫秒），redis会记个log，然后返回error。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当一个脚本超过了最大时限。只有SCRIPT KILL和SHUTDOWN NOSAVE可以用。第一个可以杀没有调write命令的东西。要是已经调用了write，只能用第二个命令杀。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置成0或者负值，时限就无限。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lua-time-limit 5000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################ REDIS CLUSTER  ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# WARNING EXPERIMENTAL: Redis Cluster is considered to be stable code, however&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# in order to mark it as &amp;quot;mature&amp;quot; we need to wait for a non trivial percentage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# of users to deploy it in production.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 开启集群&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cluster-enabled yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 每一个集群节点都有一个集群配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cluster-config-file nodes-6379.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 集群节点的超时时间，单位为毫秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cluster-node-timeout 15000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 控制从节点FailOver相关的设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设为0，从节点会一直尝试启动FailOver.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设为正数，失联大于一定时间（factor*节点TimeOut），不再进行FailOver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cluster-slave-validity-factor 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 最小从节点连接数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cluster-migration-barrier 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认为Yes,丢失一定比例Key后（可能Node无法连接或者挂掉），集群停止接受写操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置为No，集群丢失Key的情况下仍提供查询服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cluster-require-full-coverage yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################## SLOW LOG ###################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Redis慢查询日志可以记录超过指定时间的查询。运行时间不包括各种I/O时间，例如：连接客户端，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 发送响应数据等，而只计算命令执行的实际时间（这只是线程阻塞而无法同时为其他请求服务的命令执行阶段）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 你可以为慢查询日志配置两个参数:一个指明Redis的超时时间(单位为微秒)来记录超过这个时间的命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 另一个是慢查询日志长度。当一个新的命令被写进日志的时候，最老的那个记录从队列中移除。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 下面的时间单位是微秒，所以1000000就是1秒。注意，负数时间会禁用慢查询日志，而0则会强制记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 所有命令。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slowlog-log-slower-than 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这个长度没有限制。只是要主要会消耗内存。你可以通过 SLOWLOG RESET 来回收内存。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slowlog-max-len 128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################ LATENCY MONITOR ##############################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认情况下禁用延迟监控,因为它基本上是不需要的，单位为毫秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;latency-monitor-threshold 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;############################# EVENT NOTIFICATION ##############################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Redis 能通知 Pub/Sub 客户端关于键空间发生的事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这个功能文档位于http://redis.io/topics/keyspace-events&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 例如：如果键空间事件通知被开启，并且客户端对 0 号数据库的键 foo 执行 DEL 命令时，将通过&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Pub/Sub发布两条消息：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# PUBLISH __keyspace@0__:foo del&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# PUBLISH __keyevent@0__:del foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 可以在下表中选择Redis要通知的事件类型。事件类型由单个字符来标识：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# K    键空间通知，以__keyspace@&amp;lt;db&amp;gt;__为前缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# E    键事件通知，以__keysevent@&amp;lt;db&amp;gt;__为前缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# g    DEL , EXPIRE , RENAME 等类型无关的通用命令的通知, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# $    String命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# l    List命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# s    Set命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# h    Hash命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# z    有序集合命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# x    过期事件（每次key过期时生成）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# e    驱逐事件（当key在内存满了被清除时生成）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# A    g$lshzxe的别名，因此”AKE”意味着所有的事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# notify-keyspace-events 带一个由0到多个字符组成的字符串参数。空字符串意思是通知被禁用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 例子：启用List和通用事件通知：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# notify-keyspace-events Elg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 例子2：为了获取过期key的通知订阅名字为 __keyevent@__:expired 的频道，用以下配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# notify-keyspace-events Ex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认所用的通知被禁用，因为用户通常不需要该特性，并且该特性会有性能损耗。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注意如果你不指定至少K或E之一，不会发送任何事件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notify-keyspace-events &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;############################### ADVANCED CONFIG ###############################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当有大量数据时，适合用哈希编码(这会需要更多的内存)，元素数量上限不能超过给定限制。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Redis Hash是value内部为一个HashMap，如果该Map的成员数比较少，则会采用类似一维线性的紧凑格式来存储该Map, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 即省去了大量指针的内存开销，如下2个条件任意一个条件超过设置值都会转换成真正的HashMap，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当value这个Map内部不超过多少个成员时会采用线性紧凑格式存储，默认是64,即value内部有64个以下的成员就是使用线性紧凑存储，超过该值自动转成真正的HashMap。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hash-max-ziplist-entries 512&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# list数据类型节点值大小小于多少字节会采用紧凑存储格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hash-max-ziplist-value 64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 列表也以特殊的方式节省大量空间编码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 允许每个节点内部列表条目的数量可以指定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 指定一个固定的最大大小或元素的最大数目。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 使用-5到-1指定固定最大大小：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -5: max size: 64 Kb  &amp;lt;-- 不推荐用于正常工作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -4: max size: 32 Kb  &amp;lt;-- 不推荐&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -3: max size: 16 Kb  &amp;lt;-- 有可能不推荐&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -2: max size: 8 Kb   &amp;lt;-- good&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -1: max size: 4 Kb   &amp;lt;-- good&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 正数意味着精确的指定每个节点的数量，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 性能最高的选项通常是2（8 kb大小）或1（4 kb大小），&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但如果您使用的情况是独特的，调整设置必要的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list-max-ziplist-size -2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 列表页可以压缩 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 为了快速push/pop，列表的头和尾总是不压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 配置:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 0: 全部不压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1: [head]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[tail]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#    [head], [tail] 不压缩; 头尾之间的node将压缩.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 2: [head]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     [head-&amp;gt;next], [tail-&amp;gt;prev] 不压缩; 之间的node将压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 3: [head]-&amp;gt;[next]-&amp;gt;[next]-&amp;gt;node-&amp;gt;node-&amp;gt;...-&amp;gt;node-&amp;gt;[prev]-&amp;gt;[prev]-&amp;gt;[tail]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 同上.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list-compress-depth 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 还有这样一种特殊编码的情况：数据全是64位无符号整型数字构成的字符串。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 下面这个配置项就是用来限制这种情况下使用这种编码的最大上限的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set-max-intset-entries 512&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 与第一、第二种情况相似，有序序列也可以用一种特别的编码方式来处理，可节省大量空间。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这种编码只适合长度和元素都符合下面限制的有序序列：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zset-max-ziplist-entries 128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zset-max-ziplist-value 64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 关于HyperLogLog的介绍：http://www.redis.io/topics/data-types-intro#hyperloglogs  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# HyperLogLog稀疏表示限制设置，如果其值大于16000，则仍然采用稠密表示，因为这时稠密表示更能有效使用内存  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 建议值为3000  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hll-sparse-max-bytes 3000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 哈希刷新，每100个CPU毫秒会拿出1个毫秒来刷新Redis的主哈希表(顶级键值映射表)。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# redis所用的哈希表实现(见dict.c)采用延迟哈希刷新机制：你对一个哈希表操作越多，哈希刷新操作就越频繁；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 反之，如果服务器非常不活跃那么也就是用点内存保存哈希表而已。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认是每秒钟进行10次哈希表刷新，用来刷新字典，然后尽快释放内存。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 建议：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你对延迟比较在意的话就用 &amp;quot;activerehashing no&amp;quot;，每个请求延迟2毫秒不太好嘛。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果你不太在意延迟而希望尽快释放内存的话就设置 &amp;quot;activerehashing yes&amp;quot;。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;activerehashing yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 客户端的输出缓冲区的限制，可用于强制断开那些因为某种原因从服务器读取数据的速度不够快的客户端，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# （一个常见的原因是一个发布/订阅客户端消费消息的速度无法赶上生产它们的速度）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 可以对三种不同的客户端设置不同的限制：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# normal -&amp;gt; 正常客户端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# slave -&amp;gt; slave和 MONITOR 客户端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# pubsub -&amp;gt; 至少订阅了一个pubsub channel或pattern的客户端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 下面是每个client-output-buffer-limit语法:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# client-output-buffer-limit &amp;lt;class&amp;gt;&amp;lt;hard limit&amp;gt; &amp;lt;soft limit&amp;gt; &amp;lt;soft seconds&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 一旦达到硬限制客户端会立即被断开，或者达到软限制并持续达到指定的秒数（连续的）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 例如，如果硬限制为32兆字节和软限制为16兆字节/10秒，客户端将会立即断开&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果输出缓冲区的大小达到32兆字节，或客户端达到16兆字节并连续超过了限制10秒，就将断开连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认normal客户端不做限制，因为他们在不主动请求时不接收数据（以推的方式），只有异步客户端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 可能会出现请求数据的速度比它可以读取的速度快的场景。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# pubsub和slave客户端会有一个默认值，因为订阅者和slaves以推的方式来接收数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 把硬限制和软限制都设置为0来禁用该功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client-output-buffer-limit normal 0 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client-output-buffer-limit slave 256mb 64mb 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client-output-buffer-limit pubsub 32mb 8mb 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Redis调用内部函数来执行许多后台任务，如关闭客户端超时的连接，清除未被请求过的过期Key等等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 不是所有的任务都以相同的频率执行，但Redis依照指定的“hz”值来执行检查任务。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认情况下，“hz”的被设定为10。提高该值将在Redis空闲时使用更多的CPU时，但同时当有多个key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 同时到期会使Redis的反应更灵敏，以及超时可以更精确地处理。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 范围是1到500之间，但是值超过100通常不是一个好主意。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 大多数用户应该使用10这个默认值，只有在非常低的延迟要求时有必要提高到100。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hz 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当一个子进程重写AOF文件时，如果启用下面的选项，则文件每生成32M数据会被同步。为了增量式的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 写入硬盘并且避免大的延迟高峰这个指令是非常有用的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aof-rewrite-incremental-fsync yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Redis 配置文件示例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 为了加载配置，Redis必须以配置文件作为第一参数启动。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# ./redis-server /path/to/redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当你需要配置内存大小的时候，必须要带上单位，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 通常的格式就是 1k 5gb 4M 等酱紫：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1k =&amp;gt; 1000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1kb =&amp;gt; 1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1m =&amp;gt; 1000000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1mb =&amp;gt; 1024*1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1g =&amp;gt; 1000000000 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1gb =&amp;gt; 1024*1024*1024 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 单位不区分大小写，你写1GB 1Gb 1gB 是一样的的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################## INCLUDES ###################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 假如说你有一个可用于所有的 redis server 的标准配置模板，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但针对某些 server 又需要一些个性化的设置，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 你可以使用 include 来包含一些其他的配置文件，这对你来说是非常有用的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 但是要注意哦，include 是不能被 config rewrite 命令改写的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 由于 redis 总是以最后的加工线作为一个配置指令值，所以你最好是把 include 放在这个文件的最前面，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 以避免在运行时覆盖配置的改变，相反，你就把它放在后面（其实就是你把标准模板放在前面，需要特殊配置的写在后面会覆盖标准配置）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# include /path/to/local.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# include /path/to/other.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;################################## NETWORK #####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认情况下，redis 在 server 上所有有效的网络接口上监听客户端连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 你如果只想让它在一个或者多个网络接口上监听，那你就绑定一个IP或者多个IP。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 示例，多个IP用空格隔开:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# bind 192.168.1.100 10.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# bind 127.0.0.1 ::1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bind 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 保护模式防止 redis 实例被网络操作恶意关闭。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 当保护模式开启时，而且：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       1）redis 监听全部的网络接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#       2）没有配置密码验证&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 时，redis 服务器只接受本地（127.0.0.1 and ::1）或者是Unix实例的socket链接。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 默认情况下，保护模式是开启的，除非你确定你接受其他的客户端链接，即使这些链接没有密码验证、指定网络接口时才关闭。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protected-mode yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="NoSql" scheme="http://bochenlong.github.io/categories/NoSql/"/>
    
    
      <category term="Redis" scheme="http://bochenlong.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Java类加载器梳理</title>
    <link href="http://bochenlong.github.io/2016/05/19/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%A2%B3%E7%90%86/"/>
    <id>http://bochenlong.github.io/2016/05/19/Java类加载梳理/</id>
    <published>2016-05-19T12:22:10.000Z</published>
    <updated>2016-05-24T04:45:04.615Z</updated>
    
    <content type="html">&lt;h3 id=&quot;什么是类加载器&quot;&gt;&lt;a href=&quot;#什么是类加载器&quot; class=&quot;headerlink&quot; title=&quot;什么是类加载器&quot;&gt;&lt;/a&gt;什么是类加载器&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;虚拟机设计团队把类加载阶段中的“通过一个类的全限定名来获取描述此类的二进制字节流”这个动作放到虚拟机外部去实现，以便让应用程序自己决定如何去获取所需要的类。实现这个动作的代码模块成为“类加载器”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单的讲，类加载器就是Java程序在运行时动态加载class文件到内存中的模块。类加载器是Java语言的一项创新，在类层次划分、OSGi、热部署、代码加密等领域都有着极其重要的应用。&lt;/p&gt;
&lt;h3 id=&quot;Java默认的类加载器&quot;&gt;&lt;a href=&quot;#Java默认的类加载器&quot; class=&quot;headerlink&quot; title=&quot;Java默认的类加载器&quot;&gt;&lt;/a&gt;Java默认的类加载器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;启动类加载器（Bootstrap ClassLoader):这个类加载器负责将存放在&lt;strong&gt;&lt;java_home&gt;\lib目录中，或者被-Xbootclasspath参数所指定的路径&lt;/java_home&gt;&lt;/strong&gt;中的，并且是虚拟机识别的（仅按照文件名称识别，如rt.jar,名字不符合的类库即使放在lib目录中也不会被加载）类库加载到虚拟机内存中。启动类加载器无法被Java程序直接引用，这个类加载器使用C++实现，是虚拟机自身的一部分。比如打包dmeo.jar，含类到&lt;/li&gt;
&lt;li&gt;扩展类加载器（Extension ClassLoader）：这个加载器由sun.misc.Luncher$ExtClassLoader实现，它负责加载&lt;strong&gt;&lt;java_home&gt;\lib\ext目录中的，或者被java.ext.dirs系统变量所指定的路径&lt;/java_home&gt;&lt;/strong&gt;中的所有类库，开发者可以直接使用扩展类加载器。&lt;/li&gt;
&lt;li&gt;应用程序类加载器（Applicaition ClassLoader）：这个类加载器是ClassLoader中的getSystemClassLoader()方法的返回值，也成为系统类加载器。它负责加载用户&lt;strong&gt;类路径（ClassPath）&lt;/strong&gt;上所指定的类库，开发者可以直接使用这个类加载器，如果应用中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;类加载器加载类的原理&quot;&gt;&lt;a href=&quot;#类加载器加载类的原理&quot; class=&quot;headerlink&quot; title=&quot;类加载器加载类的原理&quot;&gt;&lt;/a&gt;类加载器加载类的原理&lt;/h3&gt;&lt;h4 id=&quot;类与类加载器&quot;&gt;&lt;a href=&quot;#类与类加载器&quot; class=&quot;headerlink&quot; title=&quot;类与类加载器&quot;&gt;&lt;/a&gt;类与类加载器&lt;/h4&gt;&lt;p&gt;对于任意一个类，都需要由它加载它的类加载器和这个类本身一同确立其在Java虚拟中的唯一性，每一个类加载器，都拥有一个独立的类名称空间。如果两个类源于同一个class文件，被同一个虚拟机加载，只要加载它们的类加载器不同，那这两个类就必定不相等（包括equals/isAssignableFrom/isInstance）。测试代码：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com&quot; target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 定义测试Object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.sun.tools.javac.util.Assert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.InputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com&quot; target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 自定义ClassLoader&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClassLoader&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ClassLoader&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Class&amp;lt;?&amp;gt; loadClass(String name) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.checkNonNull(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String className = name.substring(name.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot;.class&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 获取当前路径下className文件的字节流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InputStream in = getClass().getResourceAsStream(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 如果为空的话，由父类加载处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(in == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.loadClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] bytes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[in.available()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 读取字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            in.read(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 实例化class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.defineClass(name,bytes,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,bytes.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassNotFoundException(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @author &amp;lt;a href=&amp;quot;mailto:bochenlong@163.com&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class Test &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main(String[] args) throws Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		// 实例化自定义加载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	ClassLoader classLoader = new MyClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	// 通过自定义类加载器生成TestObject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	Object o = classLoader.loadClass(&amp;quot;demo.classloader.TestObject&amp;quot;).newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	System.out.println(o instanceof  TestObject);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      	// 输出false，即o不是TestObject类型，因为这里的TestObject是应用类加载器加载的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;双亲委派模型&quot;&gt;&lt;a href=&quot;#双亲委派模型&quot; class=&quot;headerlink&quot; title=&quot;双亲委派模型&quot;&gt;&lt;/a&gt;双亲委派模型&lt;/h4&gt;&lt;p&gt;我们的应用程序都是都上面三种加载器互相配合进行加载的，如果有必要，还可以加入自己定义的类加载器。这些加载器之间的关系如图所示：&lt;img src=&quot;http://i.imgur.com/8QUH9PZ.png&quot; alt=&quot;类双亲委派模型&quot;&gt;&lt;br&gt;这种层次关系称之为&lt;strong&gt;双亲委派模型（Parents Delegation Model)&lt;/strong&gt;，类加载器使用这种模型呢来加载类，即：&lt;em&gt;如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个了你，而是把这个请求委派给父类加载器去完成，每一个层次的类加载器都是如此，因此所有的加载请求最终都应该传送到顶层的启动类加载器中，只有当父加载器反馈自己无法完成这个加载请求（它的搜索范围中没有找到所需的类）时，子加载器才会尝试自己去加载。&lt;/em&gt;&lt;br&gt;注意，双亲委派模型除了顶层的启动类加载器外，其余的类加载器都应当有自己的父类加载器。这里类加载器之间的关系不是以继承的关系来实现，而是都使用组合的关系来复用父加载器的代码。核心实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// java.lang.ClassLoader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; loadClass(String name, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; resolve) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (getClassLoadingLock(name)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// First, check if the class has already been loaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Class&amp;lt;?&amp;gt; c = findLoadedClass(name);&lt;span class=&quot;comment&quot;&gt;// 查找已加载的类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 如果为空，加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; t0 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parent != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 如果父加载器不为空，则使用父加载器进行记载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    c = parent.loadClass(name, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    c = findBootstrapClassOrNull(name);&lt;span class=&quot;comment&quot;&gt;// 父加载器加载不了，尝试使用启动类加载器加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// ClassNotFoundException thrown if class not found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// from the non-null parent class loader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 如果都加载不了，不作处理尝试自己加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If still not found, then invoke findClass in order&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// to find the class.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; t1 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                c = findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// this is the defining class loader; record the stats&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sun.misc.PerfCounter.getFindClasses().increment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (resolve) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            resolveClass(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;为什么要使用双亲委派模型&quot;&gt;&lt;a href=&quot;#为什么要使用双亲委派模型&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用双亲委派模型&quot;&gt;&lt;/a&gt;为什么要使用双亲委派模型&lt;/h4&gt;&lt;p&gt;使用双亲委派模型组织类加载器之间的关系，使Java类随着它的类加载器一起具备了一种带有优先级的层次关系。例如类java.lang.Object，它存放在rt.jar之中，无论哪一个类加载器要加载这个类，最终都是委派给处于模型顶端的启动类加载器进行加载，因此Object类在程序的各种类加载器环境中都是一个类。相反，如果没有使用双亲委派模型，由个各类加载器自行去加载的话，系统中将出现多个不同的Object类，Java将无法识别哪一个才是我们要用到的。&lt;/p&gt;
&lt;h4 id=&quot;双亲委派模型验证&quot;&gt;&lt;a href=&quot;#双亲委派模型验证&quot; class=&quot;headerlink&quot; title=&quot;双亲委派模型验证&quot;&gt;&lt;/a&gt;双亲委派模型验证&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;应用程序类加载器加载TestObject：&lt;/p&gt;
  &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Created by bcl on 2016/5/17.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(Test.class.getClassLoader().loadClass(&lt;span class=&quot;string&quot;&gt;&quot;demo.classloader.TestObject&quot;&lt;/span&gt;).getClassLoader());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  执行结果：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sun.misc.Launcher$AppClassLoader@232204a1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;扩展类加载器加载TestObject:&lt;br&gt;  将TestObject.class打包到demo.jar中（jar -cfv demo.jar demo/classloader/TestObject.class），将demo.jar放到${JAVA_HOME}/jre/lib/ext路径下。执行上面Test类：&lt;br&gt;  执行结果：&lt;/p&gt;
  &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sun.misc.Launcher$ExtClassLoader@&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;ea987ac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动类加载器加载TestObject,两种验证方式:&lt;br&gt;  1 在jvm中添加-Xbootclasspath参数，指定启动类加载类的加载路径，并追加我们自已的jar（demo.jar）   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-Xbootclasspath:路径，指定启动类加载器的加载路径，一般结合参数使用&lt;br&gt;1 -Xbootclasspath/a:路径，/a指后缀在核心class搜索路径后面&lt;br&gt;2 -Xbootclasspath/p:路径，/p前缀在class搜索路径前面,一般不使用，避免和核心类冲突   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  执行上面test类，执行运行参数-Xbootclasspath/a:D:\demo.jar，执行结果：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  从类的层次关系，可以知道，ExtClassLoader的parent加载器为null，实际上指的就是启动类加载器。&lt;/p&gt;
&lt;p&gt;  2 将class文件放到${JAVA_HOME}/jre/classes/目录下&lt;br&gt;  验证略&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;扩展类加载器&quot;&gt;&lt;a href=&quot;#扩展类加载器&quot; class=&quot;headerlink&quot; title=&quot;扩展类加载器&quot;&gt;&lt;/a&gt;扩展类加载器&lt;/h4&gt;&lt;p&gt;了解了各个类加载器的执行原理和自带类加载器的加载用途，我们就可以利用双亲委派模式自定义类加载器来扩展Java的类加载器了。扩展很简单，自定义扩展类，重写findClass()就可以，这样类在请求加载的时候会依次请求父类加载，显然父类加载不了的时候，自定义类加载器会尝试自己加载而调用重写&lt;code&gt;findClass()&lt;/code&gt;方法。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么偏偏只重写findClass方法？&lt;br&gt;在loadClass方法中JDK帮我们实现了双亲委派模式加载类的逻辑，如果父类加载器都加载不了类的时候，loadClass方法就会调用findClass方法来搜索类。所以我们只需重写该方法即可。如没有特殊的要求，一般不建议重写loadClass加载类的算法。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面我们使用类加载器加载非类路径下的d:\TestObject.class:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jdk.internal.util.xml.impl.Input;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Created by bcl on 2016/5/19.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 自定义类加载器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClassLoader&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ClassLoader&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; findClass(String name) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            File file = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;string&quot;&gt;&quot;D:\\TestObject.class&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (file == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String path = name.substring(name.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).concat(&lt;span class=&quot;string&quot;&gt;&quot;.class&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InputStream in = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(in == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] bytes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[in.available()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            in.read(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.defineClass(name,bytes,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,bytes.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassNotFoundException(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Created by bcl on 2016/5/17.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 注意确保应用、扩展、启动类加载器加载路径下都没有TestObject.class，否则由于优先级则会被其他类加载器加载。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MyClassLoader myClassLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(myClassLoader.loadClass(&lt;span class=&quot;string&quot;&gt;&quot;demo.classloader.TestObject&quot;&lt;/span&gt;).getClassLoader());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;demo.classloader.MyClassLoader@7f31245a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;经典应用场景&quot;&gt;&lt;a href=&quot;#经典应用场景&quot; class=&quot;headerlink&quot; title=&quot;经典应用场景&quot;&gt;&lt;/a&gt;经典应用场景&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Tomcat，类加载器架构，自己定义了多个类加载器，&lt;br&gt;1, 保证了同一个服务器的两个Web应用程序的Java类库隔离；&lt;br&gt;2, 保证了同一个服务器的两个Web应用程序的Java类库又可以相互共享；比如多个Spring组织的应用程序不能共享，会造成资源浪费；&lt;br&gt;3, 保证了服务器尽可能保证自身的安全不受不受部署Web应用程序影响；&lt;br&gt;4, 支持JSP应用的服务器，大多需要支持热替换(HotSwap)功能。   &lt;/li&gt;
&lt;li&gt;OSGi(Open Service GateWay Initiative)，是基于Java语言的动态模块化规范。已成为Java世界的“事实上”的模块化标准，最为熟悉的案例的Eclipse IDE。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体的相关应用知识可以自定Google，下面简单的实现一个热加载。&lt;/p&gt;
&lt;h4 id=&quot;实现简单的热加载&quot;&gt;&lt;a href=&quot;#实现简单的热加载&quot; class=&quot;headerlink&quot; title=&quot;实现简单的热加载&quot;&gt;&lt;/a&gt;实现简单的热加载&lt;/h4&gt;&lt;p&gt;首先，先介绍一下java.lang.ClassLoader中和热替换有关的一些重要方法：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;findLoadedClass&lt;/code&gt;：每个类加载器都维护有自己的一份已加载类名字空间，其中不能出现两个同名的类。凡是通过该类加载器加载的类，无论是直接的还是间接的，都保存在自己的名字空间中，该方法就是在该名字空间中寻找指定的类是否已存在，如果存在就返回给类的引用，否则就返回 null。这里的直接是指，存在于该类加载器的加载路径上并由该加载器完成加载，间接是指，由该类加载器把类的加载工作委托给其他类加载器完成类的实际加载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;getSystemClassLoader&lt;/code&gt;：Java2 中新增的方法。该方法返回系统使用的 ClassLoader。可以在自己定制的类加载器中通过该方法把一部分工作转交给系统类加载器去处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;defineClass&lt;/code&gt;：该方法是 ClassLoader 中非常重要的一个方法，它接收以字节数组表示的类字节码，并把它转换成 Class 实例，该方法转换一个类的同时，会先要求装载该类的父类以及实现的接口类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;loadClass&lt;/code&gt;：加载类的入口方法，调用该方法完成类的显式加载。通过对该方法的重新实现，我们可以完全控制和管理类的加载过程。&lt;br&gt;resolveClass：链接一个指定的类。这是一个在某些情况下确保类可用的必要方法，详见 Java 语言规范中“执行”一章对该方法的描述。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解了上面的这些方法，下面我们来实现一个定制的类加载器，这个类加载器只加载指定的类集合，否则就把类加载的工作委托给系统类加载器完成。&lt;br&gt;在实现代码之前，有两点需要注意：1、要想实现同一个类的不同版本的共存，那么这些不同版本必须由不同的类加载器进行加载，因此就不能把这些类的加载工作委托给系统加载器来完成，因为它们只有一份。2、为了做到这一点，就不能采用系统默认的类加载器委托规则，也就是说我们定制的类加载器要重写loadclass()方法。&lt;br&gt;下面给出代码：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.FileInputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.InputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.HashMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com&quot; target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HotSwapClassLoader&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ClassLoader&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String baseDir;&lt;span class=&quot;comment&quot;&gt;// 热替换路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Map&amp;lt;String, String&amp;gt; clazz2Path;&lt;span class=&quot;comment&quot;&gt;// 类名称和文件名称对应关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HotSwapClassLoader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String baseDir, String[] clazzs)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.baseDir = baseDir;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        clazz2Path = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        initClazz2Path(baseDir, clazzs);&lt;span class=&quot;comment&quot;&gt;// 初始化类名称和文件名称map&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initClazz2Path&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String baseDir, String[] clazzs)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String className : clazzs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            clazz2Path.put(className, className2FileName(className));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;className2FileName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String className)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; baseDir + className.replace(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).concat(&lt;span class=&quot;string&quot;&gt;&quot;.class&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Class&amp;lt;?&amp;gt; loadClass(String name) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Class&amp;lt;?&amp;gt; c = findLoadedClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!clazz2Path.containsKey(name) &amp;amp;&amp;amp; c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 如果不在热加载范围内且没有加载，则使用Java默认加载规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c = &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.loadClass(name);        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	  &lt;span class=&quot;comment&quot;&gt;// 否则没有加载的话，使用热加载器加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	  &lt;span class=&quot;comment&quot;&gt;// 获取文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            File file = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(clazz2Path.get(name));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (file != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// 获取字节流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    InputStream in = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] bytes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[in.available()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    in.read(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// 生成class类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; defineClass(name, bytes, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, bytes.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package demo.classloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @author &amp;lt;a href=&amp;quot;mailto:bochenlong@163.com&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class SayHello &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void sayHello() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&amp;quot;Hello world!&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import demo.classloader.HotSwapClassLoader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Created by bochenlong on 16/5/18.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class Test &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main(String[] args) throws Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        while (true) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Class c = new HotSwapClassLoader(&amp;quot;/Users/bochenlong/Architect/IdeaProjects/demo/java-demo/target/classes/&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    new String[]&amp;#123;&amp;quot;demo.classloader.SayHello&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .loadClass(&amp;quot;demo.classloader.SayHello&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Object o = c.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c.getMethod(&amp;quot;sayHello&amp;quot;).invoke(o);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Thread.sleep(2000L);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改SayHello输出为Hello world2，替换原SayHello.class，输出hello world2&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hello world!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello world!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello world!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello world2!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello world2!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello world2!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是类加载器&quot;&gt;&lt;a href=&quot;#什么是类加载器&quot; class=&quot;headerlink&quot; title=&quot;什么是类加载器&quot;&gt;&lt;/a&gt;什么是类加载器&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;虚拟机设计团队把类加载阶段中的“通过一个类的全限定名来获取描述此类的二进制字节流”这个动作放到虚拟机外部去实现，以便让应用程序自己决定如何去获取所需要的类。实现这个动作的代码模块成为“类加载器”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单的讲，类加载器就是Java程序在运行时动态加载class文件到内存中的模块。类加载器是Java语言的一项创新，在类层次划分、OSGi、热部署、代码加密等领域都有着极其重要的应用。&lt;/p&gt;
&lt;h3 id=&quot;Java默认的类加载器&quot;&gt;&lt;a href=&quot;#Java默认的类加载器&quot; class=&quot;headerlink&quot; title=&quot;Java默认的类加载器&quot;&gt;&lt;/a&gt;Java默认的类加载器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;启动类加载器（Bootstrap ClassLoader):这个类加载器负责将存放在&lt;strong&gt;&lt;JAVA_HOME&gt;\lib目录中，或者被-Xbootclasspath参数所指定的路径&lt;/strong&gt;中的，并且是虚拟机识别的（仅按照文件名称识别，如rt.jar,名字不符合的类库即使放在lib目录中也不会被加载）类库加载到虚拟机内存中。启动类加载器无法被Java程序直接引用，这个类加载器使用C++实现，是虚拟机自身的一部分。比如打包dmeo.jar，含类到&lt;/li&gt;
&lt;li&gt;扩展类加载器（Extension ClassLoader）：这个加载器由sun.misc.Luncher$ExtClassLoader实现，它负责加载&lt;strong&gt;&lt;JAVA_HOME&gt;\lib\ext目录中的，或者被java.ext.dirs系统变量所指定的路径&lt;/strong&gt;中的所有类库，开发者可以直接使用扩展类加载器。&lt;/li&gt;
&lt;li&gt;应用程序类加载器（Applicaition ClassLoader）：这个类加载器是ClassLoader中的getSystemClassLoader()方法的返回值，也成为系统类加载器。它负责加载用户&lt;strong&gt;类路径（ClassPath）&lt;/strong&gt;上所指定的类库，开发者可以直接使用这个类加载器，如果应用中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="http://bochenlong.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://bochenlong.github.io/tags/Java/"/>
    
      <category term="ClassLoader" scheme="http://bochenlong.github.io/tags/ClassLoader/"/>
    
  </entry>
  
  <entry>
    <title>Github+Hexo搭建个人博客</title>
    <link href="http://bochenlong.github.io/2016/05/15/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://bochenlong.github.io/2016/05/15/Github+Hexo搭建个人博客/</id>
    <published>2016-05-15T15:10:04.000Z</published>
    <updated>2016-05-24T02:54:23.094Z</updated>
    
    <content type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;想搭建个人博客，Github+Hexo是个不错的选择。&lt;/p&gt;
&lt;h3 id=&quot;为什么选择Github-Hexo&quot;&gt;&lt;a href=&quot;#为什么选择Github-Hexo&quot; class=&quot;headerlink&quot; title=&quot;为什么选择Github+Hexo&quot;&gt;&lt;/a&gt;为什么选择Github+Hexo&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Git - 最先进的开源分布式版本控制系统&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GitHub - 全球最大的社交编程及代码托管网站&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github Pages - Github提供的&lt;strong&gt;免费&lt;/strong&gt;的静态站点，Github pages具备两种模式：&lt;br&gt;  1 User/Organization Pages个人或公司站点&lt;br&gt;  2 Project Pages项目站点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hexo快速、简洁且高效的博客框架 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;急速生成页面&lt;/li&gt;
&lt;li&gt;支持Markdown&lt;/li&gt;
&lt;li&gt;一键部署博客&lt;/li&gt;
&lt;li&gt;丰富的插件、主题支持&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建Github-Pages&quot;&gt;&lt;a href=&quot;#创建Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;创建Github Pages&quot;&gt;&lt;/a&gt;创建Github Pages&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Github网站注册账号&lt;/li&gt;
&lt;li&gt;创建仓库username.github.io   &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意，新建仓库名称必须符合标准要求，username为Github账号的用户名称，建立成功之后，Github会自动将识别此仓库为Github Pages站点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;创建博客&quot;&gt;&lt;a href=&quot;#创建博客&quot; class=&quot;headerlink&quot; title=&quot;创建博客&quot;&gt;&lt;/a&gt;创建博客&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;以下为Mac环境操作记录，个别安装请根据自己系统调整&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Hexo安装&quot;&gt;&lt;a href=&quot;#Hexo安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo安装&quot;&gt;&lt;/a&gt;Hexo安装&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装依赖软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node.js ( 含npm )&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;$ brew install node&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Git&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;$ brew install git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装Hexo   &lt;/p&gt;
&lt;p&gt;  &lt;code&gt;$ sudo npm install hexo-cli -g&lt;/code&gt;    &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux / OS X 系统下需要 sudo 管理员安装，否则会出现以下错误。如果出现可以尝试 &lt;strong&gt;npm install hexo –no-optional&lt;/strong&gt; 安装解决。但此错误并不影响Hexo正常使用。&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/Release/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/default/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/Debug/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;    
&lt;h4 id=&quot;创建博客-1&quot;&gt;&lt;a href=&quot;#创建博客-1&quot; class=&quot;headerlink&quot; title=&quot;创建博客&quot;&gt;&lt;/a&gt;创建博客&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建博客  &lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init demo  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd demo   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  以上命令会自动初始化博客目录，具体目录不再列出；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动博客&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// -p 重设端口，默认4000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  打开浏览器&lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt; （默认端口为4000），便可看到Hexo默认的博客。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装NexT主题&quot;&gt;&lt;a href=&quot;#安装NexT主题&quot; class=&quot;headerlink&quot; title=&quot;安装NexT主题&quot;&gt;&lt;/a&gt;安装NexT主题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载NexT主题&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd your-hexo-site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启用主题&lt;br&gt;  打开 &lt;strong&gt;站点配置文件&lt;/strong&gt;，找到 &lt;em&gt;theme&lt;/em&gt; 字段，并将其值更改为 &lt;em&gt;next&lt;/em&gt; 。&lt;code&gt;theme: next&lt;/code&gt;；启动Hexo，即可看到NexT的主题页面，即本站主题。   &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;个性化配置&quot;&gt;&lt;a href=&quot;#个性化配置&quot; class=&quot;headerlink&quot; title=&quot;个性化配置&quot;&gt;&lt;/a&gt;个性化配置&lt;/h3&gt;&lt;p&gt;到现在，我们完成了网站的初步建设。接下来，我们给网站装扮一番，让它更加实用和个性化。&lt;/p&gt;
&lt;h4 id=&quot;网站基本配置&quot;&gt;&lt;a href=&quot;#网站基本配置&quot; class=&quot;headerlink&quot; title=&quot;网站基本配置&quot;&gt;&lt;/a&gt;网站基本配置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;网站信息设置：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;网站标题&lt;/strong&gt;&lt;br&gt;修改站点配置文件:&lt;code&gt;title: 某某的博客啦&lt;/code&gt;&lt;br&gt;如果有副标题，则改：&lt;code&gt;subtitle: 明智图新&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建站时间&lt;/strong&gt;&lt;br&gt;修改主题配置文件:&lt;code&gt;since: 2013&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作者名称&lt;/strong&gt;&lt;br&gt;修改站点配置文件:&lt;code&gt;author: yourname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站语言&lt;/strong&gt;&lt;br&gt;修改站点配置文件:&lt;code&gt;language: zh-Hans&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站时区&lt;/strong&gt;&lt;br&gt;修改站点配置文件:&lt;code&gt;timezone: Asia/Shanghai&lt;/code&gt;   &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站地址&lt;/strong&gt;&lt;br&gt;修改站点配置文件:&lt;code&gt;url: http://yourusername.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;网站订阅RSS设置&lt;/strong&gt;&lt;br&gt;1， 安装插件 hexo-generator-feed&lt;br&gt;&lt;code&gt;npm install hexo-generator-feed --save&lt;/code&gt;&lt;br&gt;2， 修改站点配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;feed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: atom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path: atom.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  limit: 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hub:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;type&lt;/strong&gt; - Feed type. (atom/rss2)&lt;br&gt;&lt;strong&gt;path&lt;/strong&gt; - Feed path. (Default: atom.xml/rss2.xml)&lt;br&gt;&lt;strong&gt;limit&lt;/strong&gt; - Maximum number of posts in the feed (Use 0 or false to show all posts)&lt;br&gt;&lt;strong&gt;hub&lt;/strong&gt; - URL of the PubSubHubbub hubs (Leave it empty if you don’t use it)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作者头像&lt;/strong&gt;&lt;br&gt;修改主题配置文件：&lt;code&gt;avatar: /images/avatar.png&lt;/code&gt;&lt;br&gt;&lt;em&gt;个人头像可放置主题路径 source/images 或者网站路径 source/uploads&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;站点描述&lt;/strong&gt;&lt;br&gt;修改站点配置文件:&lt;code&gt;description: 唯有努力不负人&lt;/code&gt;&lt;br&gt;&lt;em&gt;站点描述可以是你喜欢的一句签名:）&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;社交账号&lt;/strong&gt;&lt;br&gt;修改主题配置文件:&lt;br&gt;1 账号连接：  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;social:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  GitHub: https://github.com/your-user-name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Twitter: https://twitter.com/your-user-name  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  微博: http://weibo.com/your-user-name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # 等等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2 连接图标： &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;social_icons:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  GitHub: github&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Twitter: twitter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  微博: weibo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;友情连接&lt;/strong&gt;&lt;br&gt;修改主题配置文件:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;links_title: Links&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;links:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MacTalk: http://macshuo.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Title: http://example.com/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;标签-分类页面&quot;&gt;&lt;a href=&quot;#标签-分类页面&quot; class=&quot;headerlink&quot; title=&quot;标签/分类页面&quot;&gt;&lt;/a&gt;标签/分类页面&lt;/h4&gt;&lt;p&gt;新建标签页面&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd your-hexo-site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new page tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置页面类型&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;title: 标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2014-12-22 12:39:04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &amp;quot;tags&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comment: &amp;quot;false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;commet: false&lt;/code&gt;是关闭标签页面的评论&lt;br&gt;分类同标签一样，将tags关键字替换成categories即可&lt;/p&gt;
&lt;h4 id=&quot;文章打赏&quot;&gt;&lt;a href=&quot;#文章打赏&quot; class=&quot;headerlink&quot; title=&quot;文章打赏&quot;&gt;&lt;/a&gt;文章打赏&lt;/h4&gt;&lt;p&gt;修改主题配置文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;reward_comment: 我知道是不会有人点的，但万一有人想不开呢？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wechatpay: /images/wechat-reward.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alipay: /images/alipay-reward.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;文章点击次数&quot;&gt;&lt;a href=&quot;#文章点击次数&quot; class=&quot;headerlink&quot; title=&quot;文章点击次数&quot;&gt;&lt;/a&gt;文章点击次数&lt;/h4&gt;&lt;p&gt;文章点击次数使用leanclound。前往&lt;a href=&quot;https://leancloud.cn/注册一个新账户。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leancloud.cn/注册一个新账户。&lt;/a&gt;&lt;br&gt;1 创建应用&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/LeanCloud01.png&quot; alt=&quot;LeanCloud01&quot;&gt;&lt;br&gt;2 点击图1的存储，配置数据库；创建class，切记class名称必须为 Counter。&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/LeanCloud02.png&quot; alt=&quot;LeanCloud01&quot;&gt;&lt;br&gt;3 点击图1右上角配置，复制应用Key下的App ID/App Key。修改主题配置文件&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;leancloud_visitors:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  app_id: yourappid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  app_key: yourappkey&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;文章评论&quot;&gt;&lt;a href=&quot;#文章评论&quot; class=&quot;headerlink&quot; title=&quot;文章评论&quot;&gt;&lt;/a&gt;文章评论&lt;/h4&gt;&lt;p&gt;评论使用disqus。前往&lt;a href=&quot;https://disqus.com/注册一个新账户。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://disqus.com/注册一个新账户。&lt;/a&gt;&lt;br&gt;选择右上角个人信息下的 install on site，根据提示一步一步创建站点信息。&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/disqus03.png&quot; alt=&quot;disqus03&quot;&gt;&lt;br&gt;创建过程中配置的Disqus URL即为Disqus的shot_name，修改主题配置文件&lt;br&gt;&lt;code&gt;disqus_shortname: yourdisqusshotname&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;站内搜索&quot;&gt;&lt;a href=&quot;#站内搜索&quot; class=&quot;headerlink&quot; title=&quot;站内搜索&quot;&gt;&lt;/a&gt;站内搜索&lt;/h4&gt;&lt;p&gt;搜索使用Swiftype。前往&lt;a href=&quot;https://swiftype.com/注册一个新账户。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://swiftype.com/注册一个新账户。&lt;/a&gt;&lt;br&gt;1 创建一个搜索引擎&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/Swiftype01.png&quot; alt=&quot;Swiftype01&quot;&gt;&lt;br&gt;2 创建成功之后，即进入引擎控制台。在Overview中可安装站内搜索和订制搜索引擎。&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/Swiftype02.png&quot; alt=&quot;Swiftype02&quot;&gt;&lt;br&gt;选择Edit Install Setup，安装搜索到网站。获取Key.&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/Swiftype03.png&quot; alt=&quot;Swiftype03&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/Swiftype05.png&quot; alt=&quot;Swiftype05&quot;&gt;&lt;br&gt;3 修改主题配置文件&lt;br&gt;&lt;code&gt;swiftype_key: yourswiftpekey&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;发表文章部署到Github&quot;&gt;&lt;a href=&quot;#发表文章部署到Github&quot; class=&quot;headerlink&quot; title=&quot;发表文章部署到Github&quot;&gt;&lt;/a&gt;发表文章部署到Github&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建文章 &lt;code&gt;$ hexo new &amp;lt;postname&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;部署到Github&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  下载Github部署的依赖查插件：&lt;code&gt;$ npm install hexo-deployer-git --save&lt;/code&gt;&lt;br&gt;  修改主题配置文件：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo: git@yourgit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  message: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: username&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  email: email&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  执行&lt;code&gt;$ sudo hexo deploy&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别注意，执行部署需要root权限。sudo hexo deploy命令执行的时候应该会去读取的oot用户的公钥，因此需要生成且在Github网站配置root用户的SSH配置。否则会一直&lt;code&gt;Error: Permission denied (publickey). fatal: Could not read from remote repository.&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;br&gt;Hexo官网：&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/zh-cn/&lt;/a&gt;&lt;br&gt;NexT官网：&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://theme-next.iissnan.com/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;想搭建个人博客，Github+Hexo是个不错的选择。&lt;/p&gt;
&lt;h3 id=&quot;为什么选择Github-Hexo&quot;&gt;&lt;a href=&quot;#为什么选择Github-Hexo&quot; class=&quot;headerlink&quot; title=&quot;为什么选择Github+Hexo&quot;&gt;&lt;/a&gt;为什么选择Github+Hexo&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Git - 最先进的开源分布式版本控制系统&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GitHub - 全球最大的社交编程及代码托管网站&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github Pages - Github提供的&lt;strong&gt;免费&lt;/strong&gt;的静态站点，Github pages具备两种模式：&lt;br&gt;  1 User/Organization Pages个人或公司站点&lt;br&gt;  2 Project Pages项目站点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hexo快速、简洁且高效的博客框架 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;急速生成页面&lt;/li&gt;
&lt;li&gt;支持Markdown&lt;/li&gt;
&lt;li&gt;一键部署博客&lt;/li&gt;
&lt;li&gt;丰富的插件、主题支持&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建Github-Pages&quot;&gt;&lt;a href=&quot;#创建Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;创建Github Pages&quot;&gt;&lt;/a&gt;创建Github Pages&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Github网站注册账号&lt;/li&gt;
&lt;li&gt;创建仓库username.github.io   &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意，新建仓库名称必须符合标准要求，username为Github账号的用户名称，建立成功之后，Github会自动将识别此仓库为Github Pages站点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;创建博客&quot;&gt;&lt;a href=&quot;#创建博客&quot; class=&quot;headerlink&quot; title=&quot;创建博客&quot;&gt;&lt;/a&gt;创建博客&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;以下为Mac环境操作记录，个别安装请根据自己系统调整&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Hexo安装&quot;&gt;&lt;a href=&quot;#Hexo安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo安装&quot;&gt;&lt;/a&gt;Hexo安装&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装依赖软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node.js ( 含npm )&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;$ brew install node&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Git&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;$ brew install git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装Hexo   &lt;/p&gt;
&lt;p&gt;  &lt;code&gt;$ sudo npm install hexo-cli -g&lt;/code&gt;    &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux / OS X 系统下需要 sudo 管理员安装，否则会出现以下错误。如果出现可以尝试 &lt;strong&gt;npm install hexo –no-optional&lt;/strong&gt; 安装解决。但此错误并不影响Hexo正常使用。&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/Release/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/default/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/Debug/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Github" scheme="http://bochenlong.github.io/tags/Github/"/>
    
      <category term="Hexo" scheme="http://bochenlong.github.io/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://bochenlong.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Git学习笔记 - 命令拾遗</title>
    <link href="http://bochenlong.github.io/2016/05/15/Git%E5%91%BD%E4%BB%A4%E6%8B%BE%E9%81%97/"/>
    <id>http://bochenlong.github.io/2016/05/15/Git命令拾遗/</id>
    <published>2016-05-15T15:10:04.000Z</published>
    <updated>2016-05-24T04:45:12.411Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;查看Git版本   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;初始化仓库   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;远程仓库   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git remote add origin git@github.com:bochenlong/study-demo.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git remote remove origin // 取消关联&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;提交到暂存区   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git add 1.txt ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git add ./&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;提交到版本库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git commit -m &amp;quot;add the README.md&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git commit ./1.txt -m &amp;quot;modify 1.txt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git commit ./ -m &amp;quot;modify 1.txt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;查看仓库当前状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;对比文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git diff 1.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;查看Git日志&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git log --pretty=oneline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git log 1.txt ./&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git log --graph --pretty=oneline --abbrev-commit //查看分支合并图&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还原文件   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git reset --hard HEAD^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// HEAD^上一个版本 HEAD^^上上一个版本 HEAD~100上100个版本 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git reset --hart commitid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git reset HEAD 1.txt   // 还原版本信息，配合git checkout -- 1.txt可还原已删除文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;查看Git commit日志&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git relog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;检出   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git checkout -- filename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 一种是file自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一样的状态；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 一种是file已添加到暂存区后，做了修改，现在，撤销修改就回到添加到暂存区后的状态；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git checkout -b dev // 创建且检出切换到dev分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git checkout dev // 检出切换到dev分支&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;删除暂存区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git rm file.txt ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git rm ./*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;仓库推送到远程端   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git push orign master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;首次关联远程仓库： git push -u --force orign master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git push origin :dev // 删除远程分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git push origin tagid // 推送标签到远程&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git push origin --tags // 推送全部未推送到远程的本地标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git push origin :refs/tags/v0.9 // 删除远程标签&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;克隆&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git clone git@github.com:bochenlong/study-demo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;分支操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git branch // 查看当前分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git branch dev // 新建分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git branch -d dev  // 删除分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git branch -D dev // 强制删除分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git merge dev // dev合并到当前分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git branch --set-upstream branch-name origin/branch-name &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 本地分支与远程分支关联&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;储藏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git stash //储藏当前工作区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git stash list //查看储藏列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git stash apply stashid //恢复工作区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git stash drop stashid //删除储存内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git stash pop //恢复工作区同事删除存储内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;更新本地库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;标签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git tag v1.0 // 打标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git tag v0.9 commitid // 指定节点打标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git tag -a v0.9 -m &amp;apos;version 0.9&amp;apos; commitid // 指定标签、描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git tag // 查看标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git show tagid // 查看标签信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git tag -d v0.9 // 删除标签&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;查看Git版本   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;初始化仓库   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;远程仓库   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git remote add origin git@github.com:bochenlong/study-demo.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git remote remove origin // 取消关联&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;提交到暂存区   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git add 1.txt ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git add ./&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;提交到版本库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git commit -m &amp;quot;add the README.md&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git commit ./1.txt -m &amp;quot;modify 1.txt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~ git commit ./ -m &amp;quot;modify 1.txt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;查看仓库当前状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;对比文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~ git diff 1.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Git" scheme="http://bochenlong.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://bochenlong.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Java SPI机制梳理</title>
    <link href="http://bochenlong.github.io/2016/05/14/Java%20SPI%E6%9C%BA%E5%88%B6%E6%A2%B3%E7%90%86/"/>
    <id>http://bochenlong.github.io/2016/05/14/Java SPI机制梳理/</id>
    <published>2016-05-14T04:43:41.000Z</published>
    <updated>2016-05-24T04:45:30.139Z</updated>
    
    <content type="html">&lt;h3 id=&quot;SPI是什么&quot;&gt;&lt;a href=&quot;#SPI是什么&quot; class=&quot;headerlink&quot; title=&quot;SPI是什么&quot;&gt;&lt;/a&gt;SPI是什么&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SPI&lt;/strong&gt; 即&lt;em&gt;Service Provider Interface&lt;/em&gt;，是JDK内置的一种服务发现机制。它提供了Java运行时发现添加实现的方式，将实现的装配移到程序外，使得模块之间不对实现进行硬编码，降低耦合实现可插拔。   &lt;/p&gt;
&lt;h3 id=&quot;SPI具体约定&quot;&gt;&lt;a href=&quot;#SPI具体约定&quot; class=&quot;headerlink&quot; title=&quot;SPI具体约定&quot;&gt;&lt;/a&gt;SPI具体约定&lt;/h3&gt;&lt;p&gt;SPI的具体约定：当服务的提供者，提供了服务接口的一种实现之后，在jar包的META-INF/services/目录里同时创建一个以服务接口命名的文件。该文件里就是实现该服务接口的具体实现类。而当外部程序装配这个模块的时候，就能通过该jar包META-INF/services/里的配置文件找到具体的实现类名，并装载实例化，完成模块的注入。 基于这样一个约定就能很好的找到服务接口的实现类，而不需要再代码里指定。jdk提供服务实现查找的一个工具类：java.util.ServiceLoader。      &lt;/p&gt;
&lt;h3 id=&quot;简单示例&quot;&gt;&lt;a href=&quot;#简单示例&quot; class=&quot;headerlink&quot; title=&quot;简单示例&quot;&gt;&lt;/a&gt;简单示例&lt;/h3&gt;&lt;p&gt;参考下图我们写一个简单的SPI示例：&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/java_spi.png&quot; alt=&quot;Java SPI&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接口IHello&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.spi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IHello&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;whoSayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;接口实现类TextHello/ByteHello&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.spi.impl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; demo.spi.IHello;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com&quot; target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ByteHello&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IHello&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;whoSayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;ByteHello say hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.spi.impl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; demo.spi.IHello;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com&quot; target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TextHello&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IHello&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;whoSayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;TextHello say hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;测试类&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; demo.spi.IHello;
&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ServiceLoader;

&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt; &lt;/span&gt;{

    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{
        ServiceLoader&amp;lt;IHello&amp;gt; services = ServiceLoader.load(IHello.class);
        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (IHello service : services) {
            service.whoSayHello();
        }
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置文件META/services/demo.spi.IHello&lt;/strong&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;strong&gt;文件夹&lt;/strong&gt;名需固定为 &lt;strong&gt;META/services/&lt;/strong&gt;   &lt;strong&gt;文件&lt;/strong&gt;名称固定位 &lt;strong&gt;类&lt;/strong&gt; 全称&lt;br&gt;且文件夹需放置在类路径下，Maven项目结构可放置在resouces里&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;demo.spi.impl.TextHello#文本hello实现   
demo.spi.impl.ByteHello#字节Hello实现
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;输出结果&lt;/strong&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TextHello say hello&lt;br&gt;ByteHello say hello   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;SPI运行时发现服务的特性，可以很方便的实现服务扩展，比如JDBC、DUBBO都利用SPI机制，实现用户对服务实现的扩展；同时ServiceLoader的reload（）可以对服务进行热更换。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;SPI是什么&quot;&gt;&lt;a href=&quot;#SPI是什么&quot; class=&quot;headerlink&quot; title=&quot;SPI是什么&quot;&gt;&lt;/a&gt;SPI是什么&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SPI&lt;/strong&gt; 即&lt;em&gt;Service Provider Interface&lt;/em&gt;，是JDK内置的一种服务发现机制。它提供了Java运行时发现添加实现的方式，将实现的装配移到程序外，使得模块之间不对实现进行硬编码，降低耦合实现可插拔。   &lt;/p&gt;
&lt;h3 id=&quot;SPI具体约定&quot;&gt;&lt;a href=&quot;#SPI具体约定&quot; class=&quot;headerlink&quot; title=&quot;SPI具体约定&quot;&gt;&lt;/a&gt;SPI具体约定&lt;/h3&gt;&lt;p&gt;SPI的具体约定：当服务的提供者，提供了服务接口的一种实现之后，在jar包的META-INF/services/目录里同时创建一个以服务接口命名的文件。该文件里就是实现该服务接口的具体实现类。而当外部程序装配这个模块的时候，就能通过该jar包META-INF/services/里的配置文件找到具体的实现类名，并装载实例化，完成模块的注入。 基于这样一个约定就能很好的找到服务接口的实现类，而不需要再代码里指定。jdk提供服务实现查找的一个工具类：java.util.ServiceLoader。      &lt;/p&gt;
&lt;h3 id=&quot;简单示例&quot;&gt;&lt;a href=&quot;#简单示例&quot; class=&quot;headerlink&quot; title=&quot;简单示例&quot;&gt;&lt;/a&gt;简单示例&lt;/h3&gt;&lt;p&gt;参考下图我们写一个简单的SPI示例：&lt;br&gt;&lt;img src=&quot;http://o7ar2k9lr.bkt.clouddn.com/java_spi.png&quot; alt=&quot;Java SPI&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接口IHello&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.spi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IHello&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;whoSayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;接口实现类TextHello/ByteHello&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; demo.spi.impl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; demo.spi.IHello;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; &amp;lt;a href=&quot;mailto:bochenlong@163.com&quot; target=&quot;_blank&quot;&amp;gt;bochenlong&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ByteHello&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IHello&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;whoSayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;ByteHello say hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="http://bochenlong.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://bochenlong.github.io/tags/Java/"/>
    
      <category term="SPI" scheme="http://bochenlong.github.io/tags/SPI/"/>
    
  </entry>
  
</feed>
